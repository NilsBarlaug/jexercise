/*
 * generated by Xtext
 */
package no.hal.emfs.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class XemfsGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class EmfsRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.EmfsRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEmfsContainerAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEmfsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameEmfsNameParserRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNumberSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTagsIDTerminalRuleCall_2_1_0 = (RuleCall)cTagsAssignment_2_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_3_0 = (RuleCall)cPropertiesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cContentProviderAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Alternatives cContentProviderAlternatives_4_1_0 = (Alternatives)cContentProviderAssignment_4_1.eContents().get(0);
		private final RuleCall cContentProviderGitContentProviderParserRuleCall_4_1_0_0 = (RuleCall)cContentProviderAlternatives_4_1_0.eContents().get(0);
		private final RuleCall cContentProviderEmfsResourcesRefParserRuleCall_4_1_0_1 = (RuleCall)cContentProviderAlternatives_4_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cSolidusKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cResourcesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cResourcesEmfsResourceParserRuleCall_6_0 = (RuleCall)cResourcesAssignment_6.eContents().get(0);
		
		//EmfsRoot EmfsContainer:
		//	{EmfsContainer} ('emfs' name=EmfsName?)? ('#' tags+=ID)* properties+=Property* ('extends'
		//	contentProvider=(GitContentProvider | EmfsResourcesRef) ';')?
		//	'/'
		//	resources+=EmfsResource*
		@Override public ParserRule getRule() { return rule; }

		//{EmfsContainer} ('emfs' name=EmfsName?)? ('#' tags+=ID)* properties+=Property* ('extends'
		//contentProvider=(GitContentProvider | EmfsResourcesRef) ';')? '/' resources+=EmfsResource*
		public Group getGroup() { return cGroup; }

		//{EmfsContainer}
		public Action getEmfsContainerAction_0() { return cEmfsContainerAction_0; }

		//('emfs' name=EmfsName?)?
		public Group getGroup_1() { return cGroup_1; }

		//'emfs'
		public Keyword getEmfsKeyword_1_0() { return cEmfsKeyword_1_0; }

		//name=EmfsName?
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//EmfsName
		public RuleCall getNameEmfsNameParserRuleCall_1_1_0() { return cNameEmfsNameParserRuleCall_1_1_0; }

		//('#' tags+=ID)*
		public Group getGroup_2() { return cGroup_2; }

		//'#'
		public Keyword getNumberSignKeyword_2_0() { return cNumberSignKeyword_2_0; }

		//tags+=ID
		public Assignment getTagsAssignment_2_1() { return cTagsAssignment_2_1; }

		//ID
		public RuleCall getTagsIDTerminalRuleCall_2_1_0() { return cTagsIDTerminalRuleCall_2_1_0; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_3() { return cPropertiesAssignment_3; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_3_0() { return cPropertiesPropertyParserRuleCall_3_0; }

		//('extends' contentProvider=(GitContentProvider | EmfsResourcesRef) ';')?
		public Group getGroup_4() { return cGroup_4; }

		//'extends'
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//contentProvider=(GitContentProvider | EmfsResourcesRef)
		public Assignment getContentProviderAssignment_4_1() { return cContentProviderAssignment_4_1; }

		//(GitContentProvider | EmfsResourcesRef)
		public Alternatives getContentProviderAlternatives_4_1_0() { return cContentProviderAlternatives_4_1_0; }

		//GitContentProvider
		public RuleCall getContentProviderGitContentProviderParserRuleCall_4_1_0_0() { return cContentProviderGitContentProviderParserRuleCall_4_1_0_0; }

		//EmfsResourcesRef
		public RuleCall getContentProviderEmfsResourcesRefParserRuleCall_4_1_0_1() { return cContentProviderEmfsResourcesRefParserRuleCall_4_1_0_1; }

		//';'
		public Keyword getSemicolonKeyword_4_2() { return cSemicolonKeyword_4_2; }

		//'/'
		public Keyword getSolidusKeyword_5() { return cSolidusKeyword_5; }

		//resources+=EmfsResource*
		public Assignment getResourcesAssignment_6() { return cResourcesAssignment_6; }

		//EmfsResource
		public RuleCall getResourcesEmfsResourceParserRuleCall_6_0() { return cResourcesEmfsResourceParserRuleCall_6_0; }
	}

	public class EmfsNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.EmfsName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//EmfsName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }

		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }

		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class EmfsResourcesRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.EmfsResourcesRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cResourcesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cResourcesEmfsResourceCrossReference_0_0 = (CrossReference)cResourcesAssignment_0.eContents().get(0);
		private final RuleCall cResourcesEmfsResourceEmfsNameParserRuleCall_0_0_1 = (RuleCall)cResourcesEmfsResourceCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cResourcesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cResourcesEmfsResourceCrossReference_1_1_0 = (CrossReference)cResourcesAssignment_1_1.eContents().get(0);
		private final RuleCall cResourcesEmfsResourceEmfsNameParserRuleCall_1_1_0_1 = (RuleCall)cResourcesEmfsResourceCrossReference_1_1_0.eContents().get(1);
		
		//EmfsResourcesRef:
		//	resources+=[EmfsResource|EmfsName] (',' resources+=[EmfsResource|EmfsName])*;
		@Override public ParserRule getRule() { return rule; }

		//resources+=[EmfsResource|EmfsName] (',' resources+=[EmfsResource|EmfsName])*
		public Group getGroup() { return cGroup; }

		//resources+=[EmfsResource|EmfsName]
		public Assignment getResourcesAssignment_0() { return cResourcesAssignment_0; }

		//[EmfsResource|EmfsName]
		public CrossReference getResourcesEmfsResourceCrossReference_0_0() { return cResourcesEmfsResourceCrossReference_0_0; }

		//EmfsName
		public RuleCall getResourcesEmfsResourceEmfsNameParserRuleCall_0_0_1() { return cResourcesEmfsResourceEmfsNameParserRuleCall_0_0_1; }

		//(',' resources+=[EmfsResource|EmfsName])*
		public Group getGroup_1() { return cGroup_1; }

		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//resources+=[EmfsResource|EmfsName]
		public Assignment getResourcesAssignment_1_1() { return cResourcesAssignment_1_1; }

		//[EmfsResource|EmfsName]
		public CrossReference getResourcesEmfsResourceCrossReference_1_1_0() { return cResourcesEmfsResourceCrossReference_1_1_0; }

		//EmfsName
		public RuleCall getResourcesEmfsResourceEmfsNameParserRuleCall_1_1_0_1() { return cResourcesEmfsResourceEmfsNameParserRuleCall_1_1_0_1; }
	}

	public class ResourceNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.ResourceName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//ResourceName:
		//	'.'? ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }

		//'.'? ID ('.' ID)*
		public Group getGroup() { return cGroup; }

		//'.'?
		public Keyword getFullStopKeyword_0() { return cFullStopKeyword_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//('.' ID)*
		public Group getGroup_2() { return cGroup_2; }

		//'.'
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_1() { return cIDTerminalRuleCall_2_1; }
	}

	public class EmfsResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.EmfsResource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmfsContainerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEmfsFileParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EmfsResource:
		//	EmfsContainer | EmfsFile;
		@Override public ParserRule getRule() { return rule; }

		//EmfsContainer | EmfsFile
		public Alternatives getAlternatives() { return cAlternatives; }

		//EmfsContainer
		public RuleCall getEmfsContainerParserRuleCall_0() { return cEmfsContainerParserRuleCall_0; }

		//EmfsFile
		public RuleCall getEmfsFileParserRuleCall_1() { return cEmfsFileParserRuleCall_1; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDollarSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEmfsNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cValueAlternatives_3_0 = (Alternatives)cValueAssignment_3.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0_0 = (RuleCall)cValueAlternatives_3_0.eContents().get(0);
		private final RuleCall cValueEmfsNameParserRuleCall_3_0_1 = (RuleCall)cValueAlternatives_3_0.eContents().get(1);
		
		//Property:
		//	'$' name=EmfsName '=' value=(STRING | EmfsName);
		@Override public ParserRule getRule() { return rule; }

		//'$' name=EmfsName '=' value=(STRING | EmfsName)
		public Group getGroup() { return cGroup; }

		//'$'
		public Keyword getDollarSignKeyword_0() { return cDollarSignKeyword_0; }

		//name=EmfsName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EmfsName
		public RuleCall getNameEmfsNameParserRuleCall_1_0() { return cNameEmfsNameParserRuleCall_1_0; }

		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=(STRING | EmfsName)
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//(STRING | EmfsName)
		public Alternatives getValueAlternatives_3_0() { return cValueAlternatives_3_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0_0() { return cValueSTRINGTerminalRuleCall_3_0_0; }

		//EmfsName
		public RuleCall getValueEmfsNameParserRuleCall_3_0_1() { return cValueEmfsNameParserRuleCall_3_0_1; }
	}

	public class FolderNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.FolderName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cResourceNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//FolderName:
		//	ResourceName '/';
		@Override public ParserRule getRule() { return rule; }

		//ResourceName '/'
		public Group getGroup() { return cGroup; }

		//ResourceName
		public RuleCall getResourceNameParserRuleCall_0() { return cResourceNameParserRuleCall_0; }

		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
	}

	public class EmfsContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.EmfsContainer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameFolderNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNumberSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTagsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTagsEmfsNameParserRuleCall_1_1_0 = (RuleCall)cTagsAssignment_1_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertiesPropertyParserRuleCall_2_0 = (RuleCall)cPropertiesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cContentProviderAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Alternatives cContentProviderAlternatives_3_1_0 = (Alternatives)cContentProviderAssignment_3_1.eContents().get(0);
		private final RuleCall cContentProviderGitContentProviderParserRuleCall_3_1_0_0 = (RuleCall)cContentProviderAlternatives_3_1_0.eContents().get(0);
		private final RuleCall cContentProviderEmfsResourcesRefParserRuleCall_3_1_0_1 = (RuleCall)cContentProviderAlternatives_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cResourcesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cResourcesEmfsResourceParserRuleCall_4_0 = (RuleCall)cResourcesAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//EmfsContainer:
		//	name=FolderName ('#' tags+=EmfsName)* properties+=Property* ('extends' contentProvider=(GitContentProvider |
		//	EmfsResourcesRef) ';')?
		//	resources+=EmfsResource*
		//	=> ';'?;
		@Override public ParserRule getRule() { return rule; }

		//name=FolderName ('#' tags+=EmfsName)* properties+=Property* ('extends' contentProvider=(GitContentProvider |
		//EmfsResourcesRef) ';')? resources+=EmfsResource* => ';'?
		public Group getGroup() { return cGroup; }

		//name=FolderName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//FolderName
		public RuleCall getNameFolderNameParserRuleCall_0_0() { return cNameFolderNameParserRuleCall_0_0; }

		//('#' tags+=EmfsName)*
		public Group getGroup_1() { return cGroup_1; }

		//'#'
		public Keyword getNumberSignKeyword_1_0() { return cNumberSignKeyword_1_0; }

		//tags+=EmfsName
		public Assignment getTagsAssignment_1_1() { return cTagsAssignment_1_1; }

		//EmfsName
		public RuleCall getTagsEmfsNameParserRuleCall_1_1_0() { return cTagsEmfsNameParserRuleCall_1_1_0; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_2() { return cPropertiesAssignment_2; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_2_0() { return cPropertiesPropertyParserRuleCall_2_0; }

		//('extends' contentProvider=(GitContentProvider | EmfsResourcesRef) ';')?
		public Group getGroup_3() { return cGroup_3; }

		//'extends'
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//contentProvider=(GitContentProvider | EmfsResourcesRef)
		public Assignment getContentProviderAssignment_3_1() { return cContentProviderAssignment_3_1; }

		//(GitContentProvider | EmfsResourcesRef)
		public Alternatives getContentProviderAlternatives_3_1_0() { return cContentProviderAlternatives_3_1_0; }

		//GitContentProvider
		public RuleCall getContentProviderGitContentProviderParserRuleCall_3_1_0_0() { return cContentProviderGitContentProviderParserRuleCall_3_1_0_0; }

		//EmfsResourcesRef
		public RuleCall getContentProviderEmfsResourcesRefParserRuleCall_3_1_0_1() { return cContentProviderEmfsResourcesRefParserRuleCall_3_1_0_1; }

		//';'
		public Keyword getSemicolonKeyword_3_2() { return cSemicolonKeyword_3_2; }

		//resources+=EmfsResource*
		public Assignment getResourcesAssignment_4() { return cResourcesAssignment_4; }

		//EmfsResource
		public RuleCall getResourcesEmfsResourceParserRuleCall_4_0() { return cResourcesEmfsResourceParserRuleCall_4_0; }

		//=> ';'?
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class GitContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.GitContentProvider");
		private final Assignment cGitRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cGitRefGitContentRefParserRuleCall_0 = (RuleCall)cGitRefAssignment.eContents().get(0);
		
		//GitContentProvider:
		//	gitRef=GitContentRef;
		@Override public ParserRule getRule() { return rule; }

		//gitRef=GitContentRef
		public Assignment getGitRefAssignment() { return cGitRefAssignment; }

		//GitContentRef
		public RuleCall getGitRefGitContentRefParserRuleCall_0() { return cGitRefGitContentRefParserRuleCall_0; }
	}

	public class FileNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.FileName");
		private final RuleCall cResourceNameParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FileName:
		//	ResourceName;
		@Override public ParserRule getRule() { return rule; }

		//ResourceName
		public RuleCall getResourceNameParserRuleCall() { return cResourceNameParserRuleCall; }
	}

	public class EmfsFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.EmfsFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameFileNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cWriteableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cWriteableAsteriskKeyword_1_0 = (Keyword)cWriteableAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNumberSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTagsIDTerminalRuleCall_2_1_0 = (RuleCall)cTagsAssignment_2_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_3_0 = (RuleCall)cPropertiesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Keyword cCommercialAtKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Assignment cContentProviderAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final Alternatives cContentProviderAlternatives_4_0_1_0 = (Alternatives)cContentProviderAssignment_4_0_1.eContents().get(0);
		private final RuleCall cContentProviderURLContentProviderParserRuleCall_4_0_1_0_0 = (RuleCall)cContentProviderAlternatives_4_0_1_0.eContents().get(0);
		private final RuleCall cContentProviderGitURLContentProviderParserRuleCall_4_0_1_0_1 = (RuleCall)cContentProviderAlternatives_4_0_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_0_2 = (Keyword)cGroup_4_0.eContents().get(2);
		private final Assignment cContentProviderAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Alternatives cContentProviderAlternatives_4_1_0 = (Alternatives)cContentProviderAssignment_4_1.eContents().get(0);
		private final RuleCall cContentProviderStringContentProviderParserRuleCall_4_1_0_0 = (RuleCall)cContentProviderAlternatives_4_1_0.eContents().get(0);
		private final RuleCall cContentProviderWrappingStringContentProviderParserRuleCall_4_1_0_1 = (RuleCall)cContentProviderAlternatives_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cAlternatives_4.eContents().get(2);
		private final Keyword cColonKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cContentProviderAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final Alternatives cContentProviderAlternatives_4_2_1_0 = (Alternatives)cContentProviderAssignment_4_2_1.eContents().get(0);
		private final RuleCall cContentProviderDotClasspathFileContentProviderParserRuleCall_4_2_1_0_0 = (RuleCall)cContentProviderAlternatives_4_2_1_0.eContents().get(0);
		private final RuleCall cContentProviderDotProjectFileContentProviderParserRuleCall_4_2_1_0_1 = (RuleCall)cContentProviderAlternatives_4_2_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cAlternatives_4.eContents().get(3);
		
		//EmfsFile:
		//	name=FileName
		//	writeable?='*'? ('#' tags+=ID)* properties+=Property* ('@' contentProvider=(URLContentProvider |
		//	GitURLContentProvider) ';' | contentProvider=(StringContentProvider | WrappingStringContentProvider) | ':'
		//	contentProvider=(DotClasspathFileContentProvider | DotProjectFileContentProvider) | ';');
		@Override public ParserRule getRule() { return rule; }

		//name=FileName writeable?='*'? ('#' tags+=ID)* properties+=Property* ('@' contentProvider=(URLContentProvider |
		//GitURLContentProvider) ';' | contentProvider=(StringContentProvider | WrappingStringContentProvider) | ':'
		//contentProvider=(DotClasspathFileContentProvider | DotProjectFileContentProvider) | ';')
		public Group getGroup() { return cGroup; }

		//name=FileName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//FileName
		public RuleCall getNameFileNameParserRuleCall_0_0() { return cNameFileNameParserRuleCall_0_0; }

		//writeable?='*'?
		public Assignment getWriteableAssignment_1() { return cWriteableAssignment_1; }

		//'*'
		public Keyword getWriteableAsteriskKeyword_1_0() { return cWriteableAsteriskKeyword_1_0; }

		//('#' tags+=ID)*
		public Group getGroup_2() { return cGroup_2; }

		//'#'
		public Keyword getNumberSignKeyword_2_0() { return cNumberSignKeyword_2_0; }

		//tags+=ID
		public Assignment getTagsAssignment_2_1() { return cTagsAssignment_2_1; }

		//ID
		public RuleCall getTagsIDTerminalRuleCall_2_1_0() { return cTagsIDTerminalRuleCall_2_1_0; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_3() { return cPropertiesAssignment_3; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_3_0() { return cPropertiesPropertyParserRuleCall_3_0; }

		//('@' contentProvider=(URLContentProvider | GitURLContentProvider) ';' | contentProvider=(StringContentProvider |
		//WrappingStringContentProvider) | ':' contentProvider=(DotClasspathFileContentProvider | DotProjectFileContentProvider)
		//| ';')
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//'@' contentProvider=(URLContentProvider | GitURLContentProvider) ';'
		public Group getGroup_4_0() { return cGroup_4_0; }

		//'@'
		public Keyword getCommercialAtKeyword_4_0_0() { return cCommercialAtKeyword_4_0_0; }

		//contentProvider=(URLContentProvider | GitURLContentProvider)
		public Assignment getContentProviderAssignment_4_0_1() { return cContentProviderAssignment_4_0_1; }

		//(URLContentProvider | GitURLContentProvider)
		public Alternatives getContentProviderAlternatives_4_0_1_0() { return cContentProviderAlternatives_4_0_1_0; }

		//URLContentProvider
		public RuleCall getContentProviderURLContentProviderParserRuleCall_4_0_1_0_0() { return cContentProviderURLContentProviderParserRuleCall_4_0_1_0_0; }

		//GitURLContentProvider
		public RuleCall getContentProviderGitURLContentProviderParserRuleCall_4_0_1_0_1() { return cContentProviderGitURLContentProviderParserRuleCall_4_0_1_0_1; }

		//';'
		public Keyword getSemicolonKeyword_4_0_2() { return cSemicolonKeyword_4_0_2; }

		//contentProvider=(StringContentProvider | WrappingStringContentProvider)
		public Assignment getContentProviderAssignment_4_1() { return cContentProviderAssignment_4_1; }

		//(StringContentProvider | WrappingStringContentProvider)
		public Alternatives getContentProviderAlternatives_4_1_0() { return cContentProviderAlternatives_4_1_0; }

		//StringContentProvider
		public RuleCall getContentProviderStringContentProviderParserRuleCall_4_1_0_0() { return cContentProviderStringContentProviderParserRuleCall_4_1_0_0; }

		//WrappingStringContentProvider
		public RuleCall getContentProviderWrappingStringContentProviderParserRuleCall_4_1_0_1() { return cContentProviderWrappingStringContentProviderParserRuleCall_4_1_0_1; }

		//':' contentProvider=(DotClasspathFileContentProvider | DotProjectFileContentProvider)
		public Group getGroup_4_2() { return cGroup_4_2; }

		//':'
		public Keyword getColonKeyword_4_2_0() { return cColonKeyword_4_2_0; }

		//contentProvider=(DotClasspathFileContentProvider | DotProjectFileContentProvider)
		public Assignment getContentProviderAssignment_4_2_1() { return cContentProviderAssignment_4_2_1; }

		//(DotClasspathFileContentProvider | DotProjectFileContentProvider)
		public Alternatives getContentProviderAlternatives_4_2_1_0() { return cContentProviderAlternatives_4_2_1_0; }

		//DotClasspathFileContentProvider
		public RuleCall getContentProviderDotClasspathFileContentProviderParserRuleCall_4_2_1_0_0() { return cContentProviderDotClasspathFileContentProviderParserRuleCall_4_2_1_0_0; }

		//DotProjectFileContentProvider
		public RuleCall getContentProviderDotProjectFileContentProviderParserRuleCall_4_2_1_0_1() { return cContentProviderDotProjectFileContentProviderParserRuleCall_4_2_1_0_1; }

		//';'
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }
	}

	public class StringContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.StringContentProvider");
		private final Assignment cStringContentsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStringContentsAbstractStringContentsParserRuleCall_0 = (RuleCall)cStringContentsAssignment.eContents().get(0);
		
		//StringContentProvider:
		//	stringContents+=AbstractStringContents+;
		@Override public ParserRule getRule() { return rule; }

		//stringContents+=AbstractStringContents+
		public Assignment getStringContentsAssignment() { return cStringContentsAssignment; }

		//AbstractStringContents
		public RuleCall getStringContentsAbstractStringContentsParserRuleCall_0() { return cStringContentsAbstractStringContentsParserRuleCall_0; }
	}

	public class AbstractStringContentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.AbstractStringContents");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPropertyValueStringParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVerbatimStringContentsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cXmlStringContentsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AbstractStringContents:
		//	PropertyValueString | VerbatimStringContents | XmlStringContents;
		@Override public ParserRule getRule() { return rule; }

		//PropertyValueString | VerbatimStringContents | XmlStringContents
		public Alternatives getAlternatives() { return cAlternatives; }

		//PropertyValueString
		public RuleCall getPropertyValueStringParserRuleCall_0() { return cPropertyValueStringParserRuleCall_0; }

		//VerbatimStringContents
		public RuleCall getVerbatimStringContentsParserRuleCall_1() { return cVerbatimStringContentsParserRuleCall_1; }

		//XmlStringContents
		public RuleCall getXmlStringContentsParserRuleCall_2() { return cXmlStringContentsParserRuleCall_2; }
	}

	public class VerbatimStringContentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.VerbatimStringContents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cHyphenMinusHyphenMinusHyphenMinusKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cWriteableAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cWriteableAsteriskKeyword_0_1_0 = (Keyword)cWriteableAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cNumberSignKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cTagsAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cTagsIDTerminalRuleCall_0_2_1_0 = (RuleCall)cTagsAssignment_0_2_1.eContents().get(0);
		private final Assignment cPropertiesAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cPropertiesPropertyParserRuleCall_0_3_0 = (RuleCall)cPropertiesAssignment_0_3.eContents().get(0);
		private final Assignment cStringContentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cStringContentAlternatives_1_0 = (Alternatives)cStringContentAssignment_1.eContents().get(0);
		private final RuleCall cStringContentSTRINGTerminalRuleCall_1_0_0 = (RuleCall)cStringContentAlternatives_1_0.eContents().get(0);
		private final RuleCall cStringContentSTRING_CONTENTTerminalRuleCall_1_0_1 = (RuleCall)cStringContentAlternatives_1_0.eContents().get(1);
		
		//VerbatimStringContents:
		//	('---' writeable?='*'? ('#' tags+=ID)* properties+=Property*)?
		//	stringContent=(STRING | STRING_CONTENT);
		@Override public ParserRule getRule() { return rule; }

		//('---' writeable?='*'? ('#' tags+=ID)* properties+=Property*)? stringContent=(STRING | STRING_CONTENT)
		public Group getGroup() { return cGroup; }

		//('---' writeable?='*'? ('#' tags+=ID)* properties+=Property*)?
		public Group getGroup_0() { return cGroup_0; }

		//'---'
		public Keyword getHyphenMinusHyphenMinusHyphenMinusKeyword_0_0() { return cHyphenMinusHyphenMinusHyphenMinusKeyword_0_0; }

		//writeable?='*'?
		public Assignment getWriteableAssignment_0_1() { return cWriteableAssignment_0_1; }

		//'*'
		public Keyword getWriteableAsteriskKeyword_0_1_0() { return cWriteableAsteriskKeyword_0_1_0; }

		//('#' tags+=ID)*
		public Group getGroup_0_2() { return cGroup_0_2; }

		//'#'
		public Keyword getNumberSignKeyword_0_2_0() { return cNumberSignKeyword_0_2_0; }

		//tags+=ID
		public Assignment getTagsAssignment_0_2_1() { return cTagsAssignment_0_2_1; }

		//ID
		public RuleCall getTagsIDTerminalRuleCall_0_2_1_0() { return cTagsIDTerminalRuleCall_0_2_1_0; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_0_3() { return cPropertiesAssignment_0_3; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_0_3_0() { return cPropertiesPropertyParserRuleCall_0_3_0; }

		//stringContent=(STRING | STRING_CONTENT)
		public Assignment getStringContentAssignment_1() { return cStringContentAssignment_1; }

		//(STRING | STRING_CONTENT)
		public Alternatives getStringContentAlternatives_1_0() { return cStringContentAlternatives_1_0; }

		//STRING
		public RuleCall getStringContentSTRINGTerminalRuleCall_1_0_0() { return cStringContentSTRINGTerminalRuleCall_1_0_0; }

		//STRING_CONTENT
		public RuleCall getStringContentSTRING_CONTENTTerminalRuleCall_1_0_1() { return cStringContentSTRING_CONTENTTerminalRuleCall_1_0_1; }
	}

	public class PropertyValueStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.PropertyValueString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDollarSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cWriteableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cWriteableAsteriskKeyword_1_0 = (Keyword)cWriteableAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cPropertyNameAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cPropertyNameIDTerminalRuleCall_2_0_0 = (RuleCall)cPropertyNameAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cPropertyNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cPropertyNameEmfsNameParserRuleCall_2_1_1_0 = (RuleCall)cPropertyNameAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Alternatives cDefaultValueAlternatives_3_1_0 = (Alternatives)cDefaultValueAssignment_3_1.eContents().get(0);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_3_1_0_0 = (RuleCall)cDefaultValueAlternatives_3_1_0.eContents().get(0);
		private final RuleCall cDefaultValueEmfsNameParserRuleCall_3_1_0_1 = (RuleCall)cDefaultValueAlternatives_3_1_0.eContents().get(1);
		
		//PropertyValueString:
		//	'$' writeable?='*'? (propertyName=ID | '{' propertyName=EmfsName '}') (':' defaultValue=(STRING | EmfsName))?;
		@Override public ParserRule getRule() { return rule; }

		//'$' writeable?='*'? (propertyName=ID | '{' propertyName=EmfsName '}') (':' defaultValue=(STRING | EmfsName))?
		public Group getGroup() { return cGroup; }

		//'$'
		public Keyword getDollarSignKeyword_0() { return cDollarSignKeyword_0; }

		//writeable?='*'?
		public Assignment getWriteableAssignment_1() { return cWriteableAssignment_1; }

		//'*'
		public Keyword getWriteableAsteriskKeyword_1_0() { return cWriteableAsteriskKeyword_1_0; }

		//(propertyName=ID | '{' propertyName=EmfsName '}')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//propertyName=ID
		public Assignment getPropertyNameAssignment_2_0() { return cPropertyNameAssignment_2_0; }

		//ID
		public RuleCall getPropertyNameIDTerminalRuleCall_2_0_0() { return cPropertyNameIDTerminalRuleCall_2_0_0; }

		//'{' propertyName=EmfsName '}'
		public Group getGroup_2_1() { return cGroup_2_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }

		//propertyName=EmfsName
		public Assignment getPropertyNameAssignment_2_1_1() { return cPropertyNameAssignment_2_1_1; }

		//EmfsName
		public RuleCall getPropertyNameEmfsNameParserRuleCall_2_1_1_0() { return cPropertyNameEmfsNameParserRuleCall_2_1_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_2() { return cRightCurlyBracketKeyword_2_1_2; }

		//(':' defaultValue=(STRING | EmfsName))?
		public Group getGroup_3() { return cGroup_3; }

		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//defaultValue=(STRING | EmfsName)
		public Assignment getDefaultValueAssignment_3_1() { return cDefaultValueAssignment_3_1; }

		//(STRING | EmfsName)
		public Alternatives getDefaultValueAlternatives_3_1_0() { return cDefaultValueAlternatives_3_1_0; }

		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_3_1_0_0() { return cDefaultValueSTRINGTerminalRuleCall_3_1_0_0; }

		//EmfsName
		public RuleCall getDefaultValueEmfsNameParserRuleCall_3_1_0_1() { return cDefaultValueEmfsNameParserRuleCall_3_1_0_1; }
	}

	public class WrappingStringContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.WrappingStringContentProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPrefixAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cPrefixAbstractStringContentsParserRuleCall_0_1_0 = (RuleCall)cPrefixAssignment_0_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommercialAtKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cContentProviderAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cContentProviderAlternatives_1_1_0 = (Alternatives)cContentProviderAssignment_1_1.eContents().get(0);
		private final RuleCall cContentProviderURLContentProviderParserRuleCall_1_1_0_0 = (RuleCall)cContentProviderAlternatives_1_1_0.eContents().get(0);
		private final RuleCall cContentProviderGitURLContentProviderParserRuleCall_1_1_0_1 = (RuleCall)cContentProviderAlternatives_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuffixAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSuffixAbstractStringContentsParserRuleCall_2_1_0 = (RuleCall)cSuffixAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//WrappingStringContentProvider:
		//	('[' prefix=AbstractStringContents ']') ('@' contentProvider=(URLContentProvider | GitURLContentProvider)) ('['
		//	suffix=AbstractStringContents ']');
		@Override public ParserRule getRule() { return rule; }

		//('[' prefix=AbstractStringContents ']') ('@' contentProvider=(URLContentProvider | GitURLContentProvider)) ('['
		//suffix=AbstractStringContents ']')
		public Group getGroup() { return cGroup; }

		//('[' prefix=AbstractStringContents ']')
		public Group getGroup_0() { return cGroup_0; }

		//'['
		public Keyword getLeftSquareBracketKeyword_0_0() { return cLeftSquareBracketKeyword_0_0; }

		//prefix=AbstractStringContents
		public Assignment getPrefixAssignment_0_1() { return cPrefixAssignment_0_1; }

		//AbstractStringContents
		public RuleCall getPrefixAbstractStringContentsParserRuleCall_0_1_0() { return cPrefixAbstractStringContentsParserRuleCall_0_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_0_2() { return cRightSquareBracketKeyword_0_2; }

		//('@' contentProvider=(URLContentProvider | GitURLContentProvider))
		public Group getGroup_1() { return cGroup_1; }

		//'@'
		public Keyword getCommercialAtKeyword_1_0() { return cCommercialAtKeyword_1_0; }

		//contentProvider=(URLContentProvider | GitURLContentProvider)
		public Assignment getContentProviderAssignment_1_1() { return cContentProviderAssignment_1_1; }

		//(URLContentProvider | GitURLContentProvider)
		public Alternatives getContentProviderAlternatives_1_1_0() { return cContentProviderAlternatives_1_1_0; }

		//URLContentProvider
		public RuleCall getContentProviderURLContentProviderParserRuleCall_1_1_0_0() { return cContentProviderURLContentProviderParserRuleCall_1_1_0_0; }

		//GitURLContentProvider
		public RuleCall getContentProviderGitURLContentProviderParserRuleCall_1_1_0_1() { return cContentProviderGitURLContentProviderParserRuleCall_1_1_0_1; }

		//('[' suffix=AbstractStringContents ']')
		public Group getGroup_2() { return cGroup_2; }

		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }

		//suffix=AbstractStringContents
		public Assignment getSuffixAssignment_2_1() { return cSuffixAssignment_2_1; }

		//AbstractStringContents
		public RuleCall getSuffixAbstractStringContentsParserRuleCall_2_1_0() { return cSuffixAbstractStringContentsParserRuleCall_2_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
	}

	public class PROPERTY_REFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.PROPERTY_REF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDollarSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cEmfsNameParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_0_2 = (Keyword)cGroup_1_0.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//PROPERTY_REF:
		//	'$' ('{' EmfsName '}' | ID);
		@Override public ParserRule getRule() { return rule; }

		//'$' ('{' EmfsName '}' | ID)
		public Group getGroup() { return cGroup; }

		//'$'
		public Keyword getDollarSignKeyword_0() { return cDollarSignKeyword_0; }

		//('{' EmfsName '}' | ID)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//'{' EmfsName '}'
		public Group getGroup_1_0() { return cGroup_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0_0() { return cLeftCurlyBracketKeyword_1_0_0; }

		//EmfsName
		public RuleCall getEmfsNameParserRuleCall_1_0_1() { return cEmfsNameParserRuleCall_1_0_1; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_1_0_2() { return cRightCurlyBracketKeyword_1_0_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class URL_SCHEMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.URL_SCHEME");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cHttpKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHttpsKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cFtpKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFileKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//URL_SCHEME:
		//	'http' | 'https' | 'ftp' | 'file';
		@Override public ParserRule getRule() { return rule; }

		//'http' | 'https' | 'ftp' | 'file'
		public Alternatives getAlternatives() { return cAlternatives; }

		//'http'
		public Keyword getHttpKeyword_0() { return cHttpKeyword_0; }

		//'https'
		public Keyword getHttpsKeyword_1() { return cHttpsKeyword_1; }

		//'ftp'
		public Keyword getFtpKeyword_2() { return cFtpKeyword_2; }

		//'file'
		public Keyword getFileKeyword_3() { return cFileKeyword_3; }
	}

	public class URL_HOST_NAMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.URL_HOST_NAME");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//URL_HOST_NAME:
		//	ID ('.' ID)+;
		@Override public ParserRule getRule() { return rule; }

		//ID ('.' ID)+
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//('.' ID)+
		public Group getGroup_1() { return cGroup_1; }

		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class URL_HOSTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.URL_HOST");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSolidusSolidusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cURL_HOST_NAMEParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cGroup_1_0.eContents().get(1);
		private final Keyword cColonKeyword_1_0_1_0 = (Keyword)cGroup_1_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1_1 = (Alternatives)cGroup_1_0_1.eContents().get(1);
		private final Keyword cDigitZeroKeyword_1_0_1_1_0 = (Keyword)cAlternatives_1_0_1_1.eContents().get(0);
		private final Keyword cDigitOneKeyword_1_0_1_1_1 = (Keyword)cAlternatives_1_0_1_1.eContents().get(1);
		private final Keyword cDigitTwoKeyword_1_0_1_1_2 = (Keyword)cAlternatives_1_0_1_1.eContents().get(2);
		private final Keyword cDigitThreeKeyword_1_0_1_1_3 = (Keyword)cAlternatives_1_0_1_1.eContents().get(3);
		private final Keyword cDigitFourKeyword_1_0_1_1_4 = (Keyword)cAlternatives_1_0_1_1.eContents().get(4);
		private final Keyword cDigitFiveKeyword_1_0_1_1_5 = (Keyword)cAlternatives_1_0_1_1.eContents().get(5);
		private final Keyword cDigitSixKeyword_1_0_1_1_6 = (Keyword)cAlternatives_1_0_1_1.eContents().get(6);
		private final Keyword cDigitSevenKeyword_1_0_1_1_7 = (Keyword)cAlternatives_1_0_1_1.eContents().get(7);
		private final Keyword cDigitEightKeyword_1_0_1_1_8 = (Keyword)cAlternatives_1_0_1_1.eContents().get(8);
		private final Keyword cDigitNineKeyword_1_0_1_1_9 = (Keyword)cAlternatives_1_0_1_1.eContents().get(9);
		private final RuleCall cPROPERTY_REFParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//URL_HOST:
		//	'//' (URL_HOST_NAME (':' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+)? | PROPERTY_REF);
		@Override public ParserRule getRule() { return rule; }

		//'//' (URL_HOST_NAME (':' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+)? | PROPERTY_REF)
		public Group getGroup() { return cGroup; }

		//'//'
		public Keyword getSolidusSolidusKeyword_0() { return cSolidusSolidusKeyword_0; }

		//(URL_HOST_NAME (':' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+)? | PROPERTY_REF)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//URL_HOST_NAME (':' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+)?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//URL_HOST_NAME
		public RuleCall getURL_HOST_NAMEParserRuleCall_1_0_0() { return cURL_HOST_NAMEParserRuleCall_1_0_0; }

		//(':' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+)?
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }

		//':'
		public Keyword getColonKeyword_1_0_1_0() { return cColonKeyword_1_0_1_0; }

		//('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+
		public Alternatives getAlternatives_1_0_1_1() { return cAlternatives_1_0_1_1; }

		//'0'
		public Keyword getDigitZeroKeyword_1_0_1_1_0() { return cDigitZeroKeyword_1_0_1_1_0; }

		//'1'
		public Keyword getDigitOneKeyword_1_0_1_1_1() { return cDigitOneKeyword_1_0_1_1_1; }

		//'2'
		public Keyword getDigitTwoKeyword_1_0_1_1_2() { return cDigitTwoKeyword_1_0_1_1_2; }

		//'3'
		public Keyword getDigitThreeKeyword_1_0_1_1_3() { return cDigitThreeKeyword_1_0_1_1_3; }

		//'4'
		public Keyword getDigitFourKeyword_1_0_1_1_4() { return cDigitFourKeyword_1_0_1_1_4; }

		//'5'
		public Keyword getDigitFiveKeyword_1_0_1_1_5() { return cDigitFiveKeyword_1_0_1_1_5; }

		//'6'
		public Keyword getDigitSixKeyword_1_0_1_1_6() { return cDigitSixKeyword_1_0_1_1_6; }

		//'7'
		public Keyword getDigitSevenKeyword_1_0_1_1_7() { return cDigitSevenKeyword_1_0_1_1_7; }

		//'8'
		public Keyword getDigitEightKeyword_1_0_1_1_8() { return cDigitEightKeyword_1_0_1_1_8; }

		//'9'
		public Keyword getDigitNineKeyword_1_0_1_1_9() { return cDigitNineKeyword_1_0_1_1_9; }

		//PROPERTY_REF
		public RuleCall getPROPERTY_REFParserRuleCall_1_1() { return cPROPERTY_REFParserRuleCall_1_1; }
	}

	public class URL_PATHElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.URL_PATH");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSolidusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cFolderNameParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cPROPERTY_REFParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Keyword cSolidusKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cFileNameParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cPROPERTY_REFParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//URL_PATH:
		//	'/' (FolderName | PROPERTY_REF '/')* (FileName | PROPERTY_REF);
		@Override public ParserRule getRule() { return rule; }

		//'/' (FolderName | PROPERTY_REF '/')* (FileName | PROPERTY_REF)
		public Group getGroup() { return cGroup; }

		//'/'
		public Keyword getSolidusKeyword_0() { return cSolidusKeyword_0; }

		//(FolderName | PROPERTY_REF '/')*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//FolderName
		public RuleCall getFolderNameParserRuleCall_1_0() { return cFolderNameParserRuleCall_1_0; }

		//PROPERTY_REF '/'
		public Group getGroup_1_1() { return cGroup_1_1; }

		//PROPERTY_REF
		public RuleCall getPROPERTY_REFParserRuleCall_1_1_0() { return cPROPERTY_REFParserRuleCall_1_1_0; }

		//'/'
		public Keyword getSolidusKeyword_1_1_1() { return cSolidusKeyword_1_1_1; }

		//(FileName | PROPERTY_REF)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//FileName
		public RuleCall getFileNameParserRuleCall_2_0() { return cFileNameParserRuleCall_2_0; }

		//PROPERTY_REF
		public RuleCall getPROPERTY_REFParserRuleCall_2_1() { return cPROPERTY_REFParserRuleCall_2_1; }
	}

	public class URLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.URL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cURL_SCHEMEParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cURL_HOSTParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cURL_PATHParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//URL:
		//	URL_SCHEME ':' URL_HOST? URL_PATH;
		@Override public ParserRule getRule() { return rule; }

		//URL_SCHEME ':' URL_HOST? URL_PATH
		public Group getGroup() { return cGroup; }

		//URL_SCHEME
		public RuleCall getURL_SCHEMEParserRuleCall_0() { return cURL_SCHEMEParserRuleCall_0; }

		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//URL_HOST?
		public RuleCall getURL_HOSTParserRuleCall_2() { return cURL_HOSTParserRuleCall_2; }

		//URL_PATH
		public RuleCall getURL_PATHParserRuleCall_3() { return cURL_PATHParserRuleCall_3; }
	}

	public class URLContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.URLContentProvider");
		private final Assignment cUrlStringAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cUrlStringAlternatives_0 = (Alternatives)cUrlStringAssignment.eContents().get(0);
		private final RuleCall cUrlStringSTRINGTerminalRuleCall_0_0 = (RuleCall)cUrlStringAlternatives_0.eContents().get(0);
		private final RuleCall cUrlStringURLParserRuleCall_0_1 = (RuleCall)cUrlStringAlternatives_0.eContents().get(1);
		
		//URLContentProvider:
		//	urlString=(STRING | URL);
		@Override public ParserRule getRule() { return rule; }

		//urlString=(STRING | URL)
		public Assignment getUrlStringAssignment() { return cUrlStringAssignment; }

		//(STRING | URL)
		public Alternatives getUrlStringAlternatives_0() { return cUrlStringAlternatives_0; }

		//STRING
		public RuleCall getUrlStringSTRINGTerminalRuleCall_0_0() { return cUrlStringSTRINGTerminalRuleCall_0_0; }

		//URL
		public RuleCall getUrlStringURLParserRuleCall_0_1() { return cUrlStringURLParserRuleCall_0_1; }
	}

	public class GitURLContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.GitURLContentProvider");
		private final Assignment cGitRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cGitRefGitContentRefParserRuleCall_0 = (RuleCall)cGitRefAssignment.eContents().get(0);
		
		//GitURLContentProvider:
		//	gitRef=GitContentRef;
		@Override public ParserRule getRule() { return rule; }

		//gitRef=GitContentRef
		public Assignment getGitRefAssignment() { return cGitRefAssignment; }

		//GitContentRef
		public RuleCall getGitRefGitContentRefParserRuleCall_0() { return cGitRefGitContentRefParserRuleCall_0; }
	}

	public class GitContentRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.GitContentRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cHostAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Alternatives cHostAlternatives_2_0_0_0 = (Alternatives)cHostAssignment_2_0_0.eContents().get(0);
		private final RuleCall cHostURL_HOST_NAMEParserRuleCall_2_0_0_0_0 = (RuleCall)cHostAlternatives_2_0_0_0.eContents().get(0);
		private final RuleCall cHostPROPERTY_REFParserRuleCall_2_0_0_0_1 = (RuleCall)cHostAlternatives_2_0_0_0.eContents().get(1);
		private final Group cGroup_2_0_1 = (Group)cGroup_2_0.eContents().get(1);
		private final Keyword cColonKeyword_2_0_1_0 = (Keyword)cGroup_2_0_1.eContents().get(0);
		private final Assignment cOwnerAssignment_2_0_1_1 = (Assignment)cGroup_2_0_1.eContents().get(1);
		private final Alternatives cOwnerAlternatives_2_0_1_1_0 = (Alternatives)cOwnerAssignment_2_0_1_1.eContents().get(0);
		private final RuleCall cOwnerIDTerminalRuleCall_2_0_1_1_0_0 = (RuleCall)cOwnerAlternatives_2_0_1_1_0.eContents().get(0);
		private final RuleCall cOwnerPROPERTY_REFParserRuleCall_2_0_1_1_0_1 = (RuleCall)cOwnerAlternatives_2_0_1_1_0.eContents().get(1);
		private final Assignment cOwnerAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final Alternatives cOwnerAlternatives_2_1_0 = (Alternatives)cOwnerAssignment_2_1.eContents().get(0);
		private final RuleCall cOwnerIDTerminalRuleCall_2_1_0_0 = (RuleCall)cOwnerAlternatives_2_1_0.eContents().get(0);
		private final RuleCall cOwnerPROPERTY_REFParserRuleCall_2_1_0_1 = (RuleCall)cOwnerAlternatives_2_1_0.eContents().get(1);
		private final Keyword cSolidusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRepoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRepoIDTerminalRuleCall_4_0 = (RuleCall)cRepoAssignment_4.eContents().get(0);
		private final Assignment cPathAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPathURL_PATHParserRuleCall_5_0 = (RuleCall)cPathAssignment_5.eContents().get(0);
		
		//// git@github.com:me/mytestrepo.git
		//GitContentRef:
		//	'git' '@' (host=(URL_HOST_NAME | PROPERTY_REF) (':' owner=(ID | PROPERTY_REF))? | owner=(ID | PROPERTY_REF)) '/'
		//	repo=ID path=URL_PATH?;
		@Override public ParserRule getRule() { return rule; }

		//'git' '@' (host=(URL_HOST_NAME | PROPERTY_REF) (':' owner=(ID | PROPERTY_REF))? | owner=(ID | PROPERTY_REF)) '/' repo=ID
		//path=URL_PATH?
		public Group getGroup() { return cGroup; }

		//'git'
		public Keyword getGitKeyword_0() { return cGitKeyword_0; }

		//'@'
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//(host=(URL_HOST_NAME | PROPERTY_REF) (':' owner=(ID | PROPERTY_REF))? | owner=(ID | PROPERTY_REF))
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//host=(URL_HOST_NAME | PROPERTY_REF) (':' owner=(ID | PROPERTY_REF))?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//host=(URL_HOST_NAME | PROPERTY_REF)
		public Assignment getHostAssignment_2_0_0() { return cHostAssignment_2_0_0; }

		//(URL_HOST_NAME | PROPERTY_REF)
		public Alternatives getHostAlternatives_2_0_0_0() { return cHostAlternatives_2_0_0_0; }

		//URL_HOST_NAME
		public RuleCall getHostURL_HOST_NAMEParserRuleCall_2_0_0_0_0() { return cHostURL_HOST_NAMEParserRuleCall_2_0_0_0_0; }

		//PROPERTY_REF
		public RuleCall getHostPROPERTY_REFParserRuleCall_2_0_0_0_1() { return cHostPROPERTY_REFParserRuleCall_2_0_0_0_1; }

		//(':' owner=(ID | PROPERTY_REF))?
		public Group getGroup_2_0_1() { return cGroup_2_0_1; }

		//':'
		public Keyword getColonKeyword_2_0_1_0() { return cColonKeyword_2_0_1_0; }

		//owner=(ID | PROPERTY_REF)
		public Assignment getOwnerAssignment_2_0_1_1() { return cOwnerAssignment_2_0_1_1; }

		//(ID | PROPERTY_REF)
		public Alternatives getOwnerAlternatives_2_0_1_1_0() { return cOwnerAlternatives_2_0_1_1_0; }

		//ID
		public RuleCall getOwnerIDTerminalRuleCall_2_0_1_1_0_0() { return cOwnerIDTerminalRuleCall_2_0_1_1_0_0; }

		//PROPERTY_REF
		public RuleCall getOwnerPROPERTY_REFParserRuleCall_2_0_1_1_0_1() { return cOwnerPROPERTY_REFParserRuleCall_2_0_1_1_0_1; }

		//owner=(ID | PROPERTY_REF)
		public Assignment getOwnerAssignment_2_1() { return cOwnerAssignment_2_1; }

		//(ID | PROPERTY_REF)
		public Alternatives getOwnerAlternatives_2_1_0() { return cOwnerAlternatives_2_1_0; }

		//ID
		public RuleCall getOwnerIDTerminalRuleCall_2_1_0_0() { return cOwnerIDTerminalRuleCall_2_1_0_0; }

		//PROPERTY_REF
		public RuleCall getOwnerPROPERTY_REFParserRuleCall_2_1_0_1() { return cOwnerPROPERTY_REFParserRuleCall_2_1_0_1; }

		//'/'
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }

		//repo=ID
		public Assignment getRepoAssignment_4() { return cRepoAssignment_4; }

		//ID
		public RuleCall getRepoIDTerminalRuleCall_4_0() { return cRepoIDTerminalRuleCall_4_0; }

		//path=URL_PATH?
		public Assignment getPathAssignment_5() { return cPathAssignment_5; }

		//URL_PATH
		public RuleCall getPathURL_PATHParserRuleCall_5_0() { return cPathURL_PATHParserRuleCall_5_0; }
	}

	public class DotClasspathFileContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.DotClasspathFileContentProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDotClasspathKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntriesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntriesAbstractClasspathEntryParserRuleCall_1_0 = (RuleCall)cEntriesAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DotClasspathFileContentProvider:
		//	'dot.classpath'
		//	entries+=AbstractClasspathEntry+
		//	';';
		@Override public ParserRule getRule() { return rule; }

		//'dot.classpath' entries+=AbstractClasspathEntry+ ';'
		public Group getGroup() { return cGroup; }

		//'dot.classpath'
		public Keyword getDotClasspathKeyword_0() { return cDotClasspathKeyword_0; }

		//entries+=AbstractClasspathEntry+
		public Assignment getEntriesAssignment_1() { return cEntriesAssignment_1; }

		//AbstractClasspathEntry
		public RuleCall getEntriesAbstractClasspathEntryParserRuleCall_1_0() { return cEntriesAbstractClasspathEntryParserRuleCall_1_0; }

		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class AbstractClasspathEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.AbstractClasspathEntry");
		private final RuleCall cClasspathEntryParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractClasspathEntry:
		//	ClasspathEntry;
		@Override public ParserRule getRule() { return rule; }

		//ClasspathEntry
		public RuleCall getClasspathEntryParserRuleCall() { return cClasspathEntryParserRuleCall; }
	}

	public class CLASSPATH_ENTRY_PATHElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.CLASSPATH_ENTRY_PATH");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFolderNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFileNameParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//CLASSPATH_ENTRY_PATH:
		//	FolderName* FileName;
		@Override public ParserRule getRule() { return rule; }

		//FolderName* FileName
		public Group getGroup() { return cGroup; }

		//FolderName*
		public RuleCall getFolderNameParserRuleCall_0() { return cFolderNameParserRuleCall_0; }

		//FileName
		public RuleCall getFileNameParserRuleCall_1() { return cFileNameParserRuleCall_1; }
	}

	public class ClasspathEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.ClasspathEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExplicitKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExplicitKindClasspathEntryKindEnumRuleCall_0_0 = (RuleCall)cExplicitKindAssignment_0.eContents().get(0);
		private final Assignment cAbsoluteAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbsoluteSolidusKeyword_1_0 = (Keyword)cAbsoluteAssignment_1.eContents().get(0);
		private final Assignment cExplicitPathAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExplicitPathCLASSPATH_ENTRY_PATHParserRuleCall_2_0 = (RuleCall)cExplicitPathAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMajorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMajorVERSIONParserRuleCall_3_1_0 = (RuleCall)cMajorAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cFullStopKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cMinorAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cMinorVERSIONParserRuleCall_3_2_1_0 = (RuleCall)cMinorAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//ClasspathEntry:
		//	explicitKind=ClasspathEntryKind absolute?='/'? explicitPath=CLASSPATH_ENTRY_PATH ('(' major=VERSION ('.'
		//	minor=VERSION)? ')')?;
		@Override public ParserRule getRule() { return rule; }

		//explicitKind=ClasspathEntryKind absolute?='/'? explicitPath=CLASSPATH_ENTRY_PATH ('(' major=VERSION ('.' minor=VERSION)?
		//')')?
		public Group getGroup() { return cGroup; }

		//explicitKind=ClasspathEntryKind
		public Assignment getExplicitKindAssignment_0() { return cExplicitKindAssignment_0; }

		//ClasspathEntryKind
		public RuleCall getExplicitKindClasspathEntryKindEnumRuleCall_0_0() { return cExplicitKindClasspathEntryKindEnumRuleCall_0_0; }

		//absolute?='/'?
		public Assignment getAbsoluteAssignment_1() { return cAbsoluteAssignment_1; }

		//'/'
		public Keyword getAbsoluteSolidusKeyword_1_0() { return cAbsoluteSolidusKeyword_1_0; }

		//explicitPath=CLASSPATH_ENTRY_PATH
		public Assignment getExplicitPathAssignment_2() { return cExplicitPathAssignment_2; }

		//CLASSPATH_ENTRY_PATH
		public RuleCall getExplicitPathCLASSPATH_ENTRY_PATHParserRuleCall_2_0() { return cExplicitPathCLASSPATH_ENTRY_PATHParserRuleCall_2_0; }

		//('(' major=VERSION ('.' minor=VERSION)? ')')?
		public Group getGroup_3() { return cGroup_3; }

		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//major=VERSION
		public Assignment getMajorAssignment_3_1() { return cMajorAssignment_3_1; }

		//VERSION
		public RuleCall getMajorVERSIONParserRuleCall_3_1_0() { return cMajorVERSIONParserRuleCall_3_1_0; }

		//('.' minor=VERSION)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//'.'
		public Keyword getFullStopKeyword_3_2_0() { return cFullStopKeyword_3_2_0; }

		//minor=VERSION
		public Assignment getMinorAssignment_3_2_1() { return cMinorAssignment_3_2_1; }

		//VERSION
		public RuleCall getMinorVERSIONParserRuleCall_3_2_1_0() { return cMinorVERSIONParserRuleCall_3_2_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}

	public class VERSIONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.VERSION");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDigitZeroKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDigitOneKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDigitTwoKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cDigitThreeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cDigitFourKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cDigitFiveKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cDigitSixKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cDigitSevenKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cDigitEightKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cDigitNineKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		
		//VERSION ecore::EInt:
		//	('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+
		@Override public ParserRule getRule() { return rule; }

		//('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+
		public Alternatives getAlternatives() { return cAlternatives; }

		//'0'
		public Keyword getDigitZeroKeyword_0() { return cDigitZeroKeyword_0; }

		//'1'
		public Keyword getDigitOneKeyword_1() { return cDigitOneKeyword_1; }

		//'2'
		public Keyword getDigitTwoKeyword_2() { return cDigitTwoKeyword_2; }

		//'3'
		public Keyword getDigitThreeKeyword_3() { return cDigitThreeKeyword_3; }

		//'4'
		public Keyword getDigitFourKeyword_4() { return cDigitFourKeyword_4; }

		//'5'
		public Keyword getDigitFiveKeyword_5() { return cDigitFiveKeyword_5; }

		//'6'
		public Keyword getDigitSixKeyword_6() { return cDigitSixKeyword_6; }

		//'7'
		public Keyword getDigitSevenKeyword_7() { return cDigitSevenKeyword_7; }

		//'8'
		public Keyword getDigitEightKeyword_8() { return cDigitEightKeyword_8; }

		//'9'
		public Keyword getDigitNineKeyword_9() { return cDigitNineKeyword_9; }
	}

	public class DotProjectFileContentProviderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.DotProjectFileContentProvider");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDotProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNumberSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cKeysAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cKeysAlternatives_1_1_0 = (Alternatives)cKeysAssignment_1_1.eContents().get(0);
		private final RuleCall cKeysSTRINGTerminalRuleCall_1_1_0_0 = (RuleCall)cKeysAlternatives_1_1_0.eContents().get(0);
		private final RuleCall cKeysFileNameParserRuleCall_1_1_0_1 = (RuleCall)cKeysAlternatives_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cLinkedResourcesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cLinkedResourcesEmfsResourceCrossReference_2_1_0 = (CrossReference)cLinkedResourcesAssignment_2_1.eContents().get(0);
		private final RuleCall cLinkedResourcesEmfsResourceEmfsNameParserRuleCall_2_1_0_1 = (RuleCall)cLinkedResourcesEmfsResourceCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cLinkedResourcesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cLinkedResourcesEmfsResourceCrossReference_2_2_1_0 = (CrossReference)cLinkedResourcesAssignment_2_2_1.eContents().get(0);
		private final RuleCall cLinkedResourcesEmfsResourceEmfsNameParserRuleCall_2_2_1_0_1 = (RuleCall)cLinkedResourcesEmfsResourceCrossReference_2_2_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DotProjectFileContentProvider:
		//	'dot.project' ('#' keys+=(STRING | FileName))+ ('@' linkedResources+=[EmfsResource|EmfsName] (','
		//	linkedResources+=[EmfsResource|EmfsName])*)*
		//	';';
		@Override public ParserRule getRule() { return rule; }

		//'dot.project' ('#' keys+=(STRING | FileName))+ ('@' linkedResources+=[EmfsResource|EmfsName] (','
		//linkedResources+=[EmfsResource|EmfsName])*)* ';'
		public Group getGroup() { return cGroup; }

		//'dot.project'
		public Keyword getDotProjectKeyword_0() { return cDotProjectKeyword_0; }

		//('#' keys+=(STRING | FileName))+
		public Group getGroup_1() { return cGroup_1; }

		//'#'
		public Keyword getNumberSignKeyword_1_0() { return cNumberSignKeyword_1_0; }

		//keys+=(STRING | FileName)
		public Assignment getKeysAssignment_1_1() { return cKeysAssignment_1_1; }

		//(STRING | FileName)
		public Alternatives getKeysAlternatives_1_1_0() { return cKeysAlternatives_1_1_0; }

		//STRING
		public RuleCall getKeysSTRINGTerminalRuleCall_1_1_0_0() { return cKeysSTRINGTerminalRuleCall_1_1_0_0; }

		//FileName
		public RuleCall getKeysFileNameParserRuleCall_1_1_0_1() { return cKeysFileNameParserRuleCall_1_1_0_1; }

		//('@' linkedResources+=[EmfsResource|EmfsName] (',' linkedResources+=[EmfsResource|EmfsName])*)*
		public Group getGroup_2() { return cGroup_2; }

		//'@'
		public Keyword getCommercialAtKeyword_2_0() { return cCommercialAtKeyword_2_0; }

		//linkedResources+=[EmfsResource|EmfsName]
		public Assignment getLinkedResourcesAssignment_2_1() { return cLinkedResourcesAssignment_2_1; }

		//[EmfsResource|EmfsName]
		public CrossReference getLinkedResourcesEmfsResourceCrossReference_2_1_0() { return cLinkedResourcesEmfsResourceCrossReference_2_1_0; }

		//EmfsName
		public RuleCall getLinkedResourcesEmfsResourceEmfsNameParserRuleCall_2_1_0_1() { return cLinkedResourcesEmfsResourceEmfsNameParserRuleCall_2_1_0_1; }

		//(',' linkedResources+=[EmfsResource|EmfsName])*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//linkedResources+=[EmfsResource|EmfsName]
		public Assignment getLinkedResourcesAssignment_2_2_1() { return cLinkedResourcesAssignment_2_2_1; }

		//[EmfsResource|EmfsName]
		public CrossReference getLinkedResourcesEmfsResourceCrossReference_2_2_1_0() { return cLinkedResourcesEmfsResourceCrossReference_2_2_1_0; }

		//EmfsName
		public RuleCall getLinkedResourcesEmfsResourceEmfsNameParserRuleCall_2_2_1_0_1() { return cLinkedResourcesEmfsResourceEmfsNameParserRuleCall_2_2_1_0_1; }

		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class XmlStringContentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlStringContents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementXmlElementParserRuleCall_1_0 = (RuleCall)cElementAssignment_1.eContents().get(0);
		private final Keyword cGreaterThanSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//// XML grammar
		//XmlStringContents:
		//	'<<' element=XmlElement '>>';
		@Override public ParserRule getRule() { return rule; }

		//'<<' element=XmlElement '>>'
		public Group getGroup() { return cGroup; }

		//'<<'
		public Keyword getLessThanSignLessThanSignKeyword_0() { return cLessThanSignLessThanSignKeyword_0; }

		//element=XmlElement
		public Assignment getElementAssignment_1() { return cElementAssignment_1; }

		//XmlElement
		public RuleCall getElementXmlElementParserRuleCall_1_0() { return cElementXmlElementParserRuleCall_1_0; }

		//'>>'
		public Keyword getGreaterThanSignGreaterThanSignKeyword_2() { return cGreaterThanSignGreaterThanSignKeyword_2; }
	}

	public class XmlElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cXmlPIElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cXmlTagElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//XmlElement:
		//	XmlPIElement | XmlTagElement;
		@Override public ParserRule getRule() { return rule; }

		//XmlPIElement | XmlTagElement
		public Alternatives getAlternatives() { return cAlternatives; }

		//XmlPIElement
		public RuleCall getXmlPIElementParserRuleCall_0() { return cXmlPIElementParserRuleCall_0; }

		//XmlTagElement
		public RuleCall getXmlTagElementParserRuleCall_1() { return cXmlTagElementParserRuleCall_1; }
	}

	public class XmlPIElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlPIElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuestionMarkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAttributesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributesXmlAttributeParserRuleCall_2_0 = (RuleCall)cAttributesAssignment_2.eContents().get(0);
		private final Keyword cQuestionMarkKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//XmlPIElement:
		//	'?' name=ID attributes+=XmlAttribute* '?';
		@Override public ParserRule getRule() { return rule; }

		//'?' name=ID attributes+=XmlAttribute* '?'
		public Group getGroup() { return cGroup; }

		//'?'
		public Keyword getQuestionMarkKeyword_0() { return cQuestionMarkKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//attributes+=XmlAttribute*
		public Assignment getAttributesAssignment_2() { return cAttributesAssignment_2; }

		//XmlAttribute
		public RuleCall getAttributesXmlAttributeParserRuleCall_2_0() { return cAttributesXmlAttributeParserRuleCall_2_0; }

		//'?'
		public Keyword getQuestionMarkKeyword_3() { return cQuestionMarkKeyword_3; }
	}

	public class XmlTagElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlTagElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStartTagAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStartTagXmlTagParserRuleCall_0_0 = (RuleCall)cStartTagAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cSolidusKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cPreAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cPreXML_TEXTTerminalRuleCall_1_1_0_0 = (RuleCall)cPreAssignment_1_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cContentsXmlContentsParserRuleCall_1_1_1_0 = (RuleCall)cContentsAssignment_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cSolidusKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Assignment cEndTagAssignment_1_1_2_1 = (Assignment)cGroup_1_1_2.eContents().get(1);
		private final RuleCall cEndTagXmlTagNameParserRuleCall_1_1_2_1_0 = (RuleCall)cEndTagAssignment_1_1_2_1.eContents().get(0);
		
		//XmlTagElement:
		//	startTag=XmlTag ('/' | pre=XML_TEXT contents+=XmlContents* ('/' endTag=XmlTagName?));
		@Override public ParserRule getRule() { return rule; }

		//startTag=XmlTag ('/' | pre=XML_TEXT contents+=XmlContents* ('/' endTag=XmlTagName?))
		public Group getGroup() { return cGroup; }

		//startTag=XmlTag
		public Assignment getStartTagAssignment_0() { return cStartTagAssignment_0; }

		//XmlTag
		public RuleCall getStartTagXmlTagParserRuleCall_0_0() { return cStartTagXmlTagParserRuleCall_0_0; }

		//('/' | pre=XML_TEXT contents+=XmlContents* ('/' endTag=XmlTagName?))
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//'/'
		public Keyword getSolidusKeyword_1_0() { return cSolidusKeyword_1_0; }

		//pre=XML_TEXT contents+=XmlContents* ('/' endTag=XmlTagName?)
		public Group getGroup_1_1() { return cGroup_1_1; }

		//pre=XML_TEXT
		public Assignment getPreAssignment_1_1_0() { return cPreAssignment_1_1_0; }

		//XML_TEXT
		public RuleCall getPreXML_TEXTTerminalRuleCall_1_1_0_0() { return cPreXML_TEXTTerminalRuleCall_1_1_0_0; }

		//contents+=XmlContents*
		public Assignment getContentsAssignment_1_1_1() { return cContentsAssignment_1_1_1; }

		//XmlContents
		public RuleCall getContentsXmlContentsParserRuleCall_1_1_1_0() { return cContentsXmlContentsParserRuleCall_1_1_1_0; }

		//('/' endTag=XmlTagName?)
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }

		//'/'
		public Keyword getSolidusKeyword_1_1_2_0() { return cSolidusKeyword_1_1_2_0; }

		//endTag=XmlTagName?
		public Assignment getEndTagAssignment_1_1_2_1() { return cEndTagAssignment_1_1_2_1; }

		//XmlTagName
		public RuleCall getEndTagXmlTagNameParserRuleCall_1_1_2_1_0() { return cEndTagXmlTagNameParserRuleCall_1_1_2_1_0; }
	}

	public class XmlTagNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlTagName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//XmlTagName:
		//	ID (':' ID)?;
		@Override public ParserRule getRule() { return rule; }

		//ID (':' ID)?
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(':' ID)?
		public Group getGroup_1() { return cGroup_1; }

		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class XmlContentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlContents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementXmlElementParserRuleCall_0_0 = (RuleCall)cElementAssignment_0.eContents().get(0);
		private final Assignment cPostAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPostXML_TEXTTerminalRuleCall_1_0 = (RuleCall)cPostAssignment_1.eContents().get(0);
		
		//XmlContents:
		//	element=XmlElement
		//	post=XML_TEXT;
		@Override public ParserRule getRule() { return rule; }

		//element=XmlElement post=XML_TEXT
		public Group getGroup() { return cGroup; }

		//element=XmlElement
		public Assignment getElementAssignment_0() { return cElementAssignment_0; }

		//XmlElement
		public RuleCall getElementXmlElementParserRuleCall_0_0() { return cElementXmlElementParserRuleCall_0_0; }

		//post=XML_TEXT
		public Assignment getPostAssignment_1() { return cPostAssignment_1; }

		//XML_TEXT
		public RuleCall getPostXML_TEXTTerminalRuleCall_1_0() { return cPostXML_TEXTTerminalRuleCall_1_0; }
	}

	public class XmlTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameXmlTagNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cAttributesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAttributesXmlAttributeParserRuleCall_1_0 = (RuleCall)cAttributesAssignment_1.eContents().get(0);
		
		//XmlTag:
		//	name=XmlTagName attributes+=XmlAttribute*;
		@Override public ParserRule getRule() { return rule; }

		//name=XmlTagName attributes+=XmlAttribute*
		public Group getGroup() { return cGroup; }

		//name=XmlTagName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//XmlTagName
		public RuleCall getNameXmlTagNameParserRuleCall_0_0() { return cNameXmlTagNameParserRuleCall_0_0; }

		//attributes+=XmlAttribute*
		public Assignment getAttributesAssignment_1() { return cAttributesAssignment_1; }

		//XmlAttribute
		public RuleCall getAttributesXmlAttributeParserRuleCall_1_0() { return cAttributesXmlAttributeParserRuleCall_1_0; }
	}

	public class XmlAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cValueAlternatives_1_1_0 = (Alternatives)cValueAssignment_1_1.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_1_0_0 = (RuleCall)cValueAlternatives_1_1_0.eContents().get(0);
		private final RuleCall cValueXmlIntParserRuleCall_1_1_0_1 = (RuleCall)cValueAlternatives_1_1_0.eContents().get(1);
		
		//XmlAttribute:
		//	name=ID ('=' value=(STRING | XmlInt))?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ('=' value=(STRING | XmlInt))?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//('=' value=(STRING | XmlInt))?
		public Group getGroup_1() { return cGroup_1; }

		//'='
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//value=(STRING | XmlInt)
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//(STRING | XmlInt)
		public Alternatives getValueAlternatives_1_1_0() { return cValueAlternatives_1_1_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_1_0_0() { return cValueSTRINGTerminalRuleCall_1_1_0_0; }

		//XmlInt
		public RuleCall getValueXmlIntParserRuleCall_1_1_0_1() { return cValueXmlIntParserRuleCall_1_1_0_1; }
	}

	public class XmlIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XmlInt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cDigitOneKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Keyword cDigitTwoKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Keyword cDigitThreeKeyword_0_0_2 = (Keyword)cAlternatives_0_0.eContents().get(2);
		private final Keyword cDigitFourKeyword_0_0_3 = (Keyword)cAlternatives_0_0.eContents().get(3);
		private final Keyword cDigitFiveKeyword_0_0_4 = (Keyword)cAlternatives_0_0.eContents().get(4);
		private final Keyword cDigitSixKeyword_0_0_5 = (Keyword)cAlternatives_0_0.eContents().get(5);
		private final Keyword cDigitSevenKeyword_0_0_6 = (Keyword)cAlternatives_0_0.eContents().get(6);
		private final Keyword cDigitEightKeyword_0_0_7 = (Keyword)cAlternatives_0_0.eContents().get(7);
		private final Keyword cDigitNineKeyword_0_0_8 = (Keyword)cAlternatives_0_0.eContents().get(8);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Keyword cDigitZeroKeyword_0_1_0 = (Keyword)cAlternatives_0_1.eContents().get(0);
		private final Keyword cDigitOneKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final Keyword cDigitTwoKeyword_0_1_2 = (Keyword)cAlternatives_0_1.eContents().get(2);
		private final Keyword cDigitThreeKeyword_0_1_3 = (Keyword)cAlternatives_0_1.eContents().get(3);
		private final Keyword cDigitFourKeyword_0_1_4 = (Keyword)cAlternatives_0_1.eContents().get(4);
		private final Keyword cDigitFiveKeyword_0_1_5 = (Keyword)cAlternatives_0_1.eContents().get(5);
		private final Keyword cDigitSixKeyword_0_1_6 = (Keyword)cAlternatives_0_1.eContents().get(6);
		private final Keyword cDigitSevenKeyword_0_1_7 = (Keyword)cAlternatives_0_1.eContents().get(7);
		private final Keyword cDigitEightKeyword_0_1_8 = (Keyword)cAlternatives_0_1.eContents().get(8);
		private final Keyword cDigitNineKeyword_0_1_9 = (Keyword)cAlternatives_0_1.eContents().get(9);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cDigitZeroKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cAlternatives_1_1.eContents().get(0);
		private final Keyword cBKeyword_1_1_0_0 = (Keyword)cGroup_1_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1_0_1 = (Alternatives)cGroup_1_1_0.eContents().get(1);
		private final Keyword cDigitZeroKeyword_1_1_0_1_0 = (Keyword)cAlternatives_1_1_0_1.eContents().get(0);
		private final Keyword cDigitOneKeyword_1_1_0_1_1 = (Keyword)cAlternatives_1_1_0_1.eContents().get(1);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Keyword cOKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1_1 = (Alternatives)cGroup_1_1_1.eContents().get(1);
		private final Keyword cDigitZeroKeyword_1_1_1_1_0 = (Keyword)cAlternatives_1_1_1_1.eContents().get(0);
		private final Keyword cDigitOneKeyword_1_1_1_1_1 = (Keyword)cAlternatives_1_1_1_1.eContents().get(1);
		private final Keyword cDigitTwoKeyword_1_1_1_1_2 = (Keyword)cAlternatives_1_1_1_1.eContents().get(2);
		private final Keyword cDigitThreeKeyword_1_1_1_1_3 = (Keyword)cAlternatives_1_1_1_1.eContents().get(3);
		private final Keyword cDigitFourKeyword_1_1_1_1_4 = (Keyword)cAlternatives_1_1_1_1.eContents().get(4);
		private final Keyword cDigitFiveKeyword_1_1_1_1_5 = (Keyword)cAlternatives_1_1_1_1.eContents().get(5);
		private final Keyword cDigitSixKeyword_1_1_1_1_6 = (Keyword)cAlternatives_1_1_1_1.eContents().get(6);
		private final Keyword cDigitSevenKeyword_1_1_1_1_7 = (Keyword)cAlternatives_1_1_1_1.eContents().get(7);
		private final Group cGroup_1_1_2 = (Group)cAlternatives_1_1.eContents().get(2);
		private final Keyword cXKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final Alternatives cAlternatives_1_1_2_1 = (Alternatives)cGroup_1_1_2.eContents().get(1);
		private final Keyword cDigitZeroKeyword_1_1_2_1_0 = (Keyword)cAlternatives_1_1_2_1.eContents().get(0);
		private final Keyword cDigitOneKeyword_1_1_2_1_1 = (Keyword)cAlternatives_1_1_2_1.eContents().get(1);
		private final Keyword cDigitTwoKeyword_1_1_2_1_2 = (Keyword)cAlternatives_1_1_2_1.eContents().get(2);
		private final Keyword cDigitThreeKeyword_1_1_2_1_3 = (Keyword)cAlternatives_1_1_2_1.eContents().get(3);
		private final Keyword cDigitFourKeyword_1_1_2_1_4 = (Keyword)cAlternatives_1_1_2_1.eContents().get(4);
		private final Keyword cDigitFiveKeyword_1_1_2_1_5 = (Keyword)cAlternatives_1_1_2_1.eContents().get(5);
		private final Keyword cDigitSixKeyword_1_1_2_1_6 = (Keyword)cAlternatives_1_1_2_1.eContents().get(6);
		private final Keyword cDigitSevenKeyword_1_1_2_1_7 = (Keyword)cAlternatives_1_1_2_1.eContents().get(7);
		private final Keyword cDigitEightKeyword_1_1_2_1_8 = (Keyword)cAlternatives_1_1_2_1.eContents().get(8);
		private final Keyword cDigitNineKeyword_1_1_2_1_9 = (Keyword)cAlternatives_1_1_2_1.eContents().get(9);
		private final Keyword cAKeyword_1_1_2_1_10 = (Keyword)cAlternatives_1_1_2_1.eContents().get(10);
		private final Keyword cBKeyword_1_1_2_1_11 = (Keyword)cAlternatives_1_1_2_1.eContents().get(11);
		private final Keyword cCKeyword_1_1_2_1_12 = (Keyword)cAlternatives_1_1_2_1.eContents().get(12);
		private final Keyword cDKeyword_1_1_2_1_13 = (Keyword)cAlternatives_1_1_2_1.eContents().get(13);
		private final Keyword cEKeyword_1_1_2_1_14 = (Keyword)cAlternatives_1_1_2_1.eContents().get(14);
		private final Keyword cFKeyword_1_1_2_1_15 = (Keyword)cAlternatives_1_1_2_1.eContents().get(15);
		
		//XmlInt:
		//	('1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')* |
		//	'0' ('b' ('0' | '1')+ | 'o' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7')+ | 'x' ('0' | '1' | '2' | '3' | '4' | '5'
		//	| '6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f')+);
		@Override public ParserRule getRule() { return rule; }

		//('1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')* | '0'
		//('b' ('0' | '1')+ | 'o' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7')+ | 'x' ('0' | '1' | '2' | '3' | '4' | '5' | '6'
		//| '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f')+)
		public Alternatives getAlternatives() { return cAlternatives; }

		//('1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')*
		public Group getGroup_0() { return cGroup_0; }

		//('1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }

		//'1'
		public Keyword getDigitOneKeyword_0_0_0() { return cDigitOneKeyword_0_0_0; }

		//'2'
		public Keyword getDigitTwoKeyword_0_0_1() { return cDigitTwoKeyword_0_0_1; }

		//'3'
		public Keyword getDigitThreeKeyword_0_0_2() { return cDigitThreeKeyword_0_0_2; }

		//'4'
		public Keyword getDigitFourKeyword_0_0_3() { return cDigitFourKeyword_0_0_3; }

		//'5'
		public Keyword getDigitFiveKeyword_0_0_4() { return cDigitFiveKeyword_0_0_4; }

		//'6'
		public Keyword getDigitSixKeyword_0_0_5() { return cDigitSixKeyword_0_0_5; }

		//'7'
		public Keyword getDigitSevenKeyword_0_0_6() { return cDigitSevenKeyword_0_0_6; }

		//'8'
		public Keyword getDigitEightKeyword_0_0_7() { return cDigitEightKeyword_0_0_7; }

		//'9'
		public Keyword getDigitNineKeyword_0_0_8() { return cDigitNineKeyword_0_0_8; }

		//('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')*
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//'0'
		public Keyword getDigitZeroKeyword_0_1_0() { return cDigitZeroKeyword_0_1_0; }

		//'1'
		public Keyword getDigitOneKeyword_0_1_1() { return cDigitOneKeyword_0_1_1; }

		//'2'
		public Keyword getDigitTwoKeyword_0_1_2() { return cDigitTwoKeyword_0_1_2; }

		//'3'
		public Keyword getDigitThreeKeyword_0_1_3() { return cDigitThreeKeyword_0_1_3; }

		//'4'
		public Keyword getDigitFourKeyword_0_1_4() { return cDigitFourKeyword_0_1_4; }

		//'5'
		public Keyword getDigitFiveKeyword_0_1_5() { return cDigitFiveKeyword_0_1_5; }

		//'6'
		public Keyword getDigitSixKeyword_0_1_6() { return cDigitSixKeyword_0_1_6; }

		//'7'
		public Keyword getDigitSevenKeyword_0_1_7() { return cDigitSevenKeyword_0_1_7; }

		//'8'
		public Keyword getDigitEightKeyword_0_1_8() { return cDigitEightKeyword_0_1_8; }

		//'9'
		public Keyword getDigitNineKeyword_0_1_9() { return cDigitNineKeyword_0_1_9; }

		//'0' ('b' ('0' | '1')+ | 'o' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7')+ | 'x' ('0' | '1' | '2' | '3' | '4' | '5' |
		//'6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f')+)
		public Group getGroup_1() { return cGroup_1; }

		//'0'
		public Keyword getDigitZeroKeyword_1_0() { return cDigitZeroKeyword_1_0; }

		//('b' ('0' | '1')+ | 'o' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7')+ | 'x' ('0' | '1' | '2' | '3' | '4' | '5' | '6'
		//| '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f')+)
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//'b' ('0' | '1')+
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }

		//'b'
		public Keyword getBKeyword_1_1_0_0() { return cBKeyword_1_1_0_0; }

		//('0' | '1')+
		public Alternatives getAlternatives_1_1_0_1() { return cAlternatives_1_1_0_1; }

		//'0'
		public Keyword getDigitZeroKeyword_1_1_0_1_0() { return cDigitZeroKeyword_1_1_0_1_0; }

		//'1'
		public Keyword getDigitOneKeyword_1_1_0_1_1() { return cDigitOneKeyword_1_1_0_1_1; }

		//'o' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7')+
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//'o'
		public Keyword getOKeyword_1_1_1_0() { return cOKeyword_1_1_1_0; }

		//('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7')+
		public Alternatives getAlternatives_1_1_1_1() { return cAlternatives_1_1_1_1; }

		//'0'
		public Keyword getDigitZeroKeyword_1_1_1_1_0() { return cDigitZeroKeyword_1_1_1_1_0; }

		//'1'
		public Keyword getDigitOneKeyword_1_1_1_1_1() { return cDigitOneKeyword_1_1_1_1_1; }

		//'2'
		public Keyword getDigitTwoKeyword_1_1_1_1_2() { return cDigitTwoKeyword_1_1_1_1_2; }

		//'3'
		public Keyword getDigitThreeKeyword_1_1_1_1_3() { return cDigitThreeKeyword_1_1_1_1_3; }

		//'4'
		public Keyword getDigitFourKeyword_1_1_1_1_4() { return cDigitFourKeyword_1_1_1_1_4; }

		//'5'
		public Keyword getDigitFiveKeyword_1_1_1_1_5() { return cDigitFiveKeyword_1_1_1_1_5; }

		//'6'
		public Keyword getDigitSixKeyword_1_1_1_1_6() { return cDigitSixKeyword_1_1_1_1_6; }

		//'7'
		public Keyword getDigitSevenKeyword_1_1_1_1_7() { return cDigitSevenKeyword_1_1_1_1_7; }

		//'x' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f')+
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }

		//'x'
		public Keyword getXKeyword_1_1_2_0() { return cXKeyword_1_1_2_0; }

		//('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f')+
		public Alternatives getAlternatives_1_1_2_1() { return cAlternatives_1_1_2_1; }

		//'0'
		public Keyword getDigitZeroKeyword_1_1_2_1_0() { return cDigitZeroKeyword_1_1_2_1_0; }

		//'1'
		public Keyword getDigitOneKeyword_1_1_2_1_1() { return cDigitOneKeyword_1_1_2_1_1; }

		//'2'
		public Keyword getDigitTwoKeyword_1_1_2_1_2() { return cDigitTwoKeyword_1_1_2_1_2; }

		//'3'
		public Keyword getDigitThreeKeyword_1_1_2_1_3() { return cDigitThreeKeyword_1_1_2_1_3; }

		//'4'
		public Keyword getDigitFourKeyword_1_1_2_1_4() { return cDigitFourKeyword_1_1_2_1_4; }

		//'5'
		public Keyword getDigitFiveKeyword_1_1_2_1_5() { return cDigitFiveKeyword_1_1_2_1_5; }

		//'6'
		public Keyword getDigitSixKeyword_1_1_2_1_6() { return cDigitSixKeyword_1_1_2_1_6; }

		//'7'
		public Keyword getDigitSevenKeyword_1_1_2_1_7() { return cDigitSevenKeyword_1_1_2_1_7; }

		//'8'
		public Keyword getDigitEightKeyword_1_1_2_1_8() { return cDigitEightKeyword_1_1_2_1_8; }

		//'9'
		public Keyword getDigitNineKeyword_1_1_2_1_9() { return cDigitNineKeyword_1_1_2_1_9; }

		//'a'
		public Keyword getAKeyword_1_1_2_1_10() { return cAKeyword_1_1_2_1_10; }

		//'b'
		public Keyword getBKeyword_1_1_2_1_11() { return cBKeyword_1_1_2_1_11; }

		//'c'
		public Keyword getCKeyword_1_1_2_1_12() { return cCKeyword_1_1_2_1_12; }

		//'d'
		public Keyword getDKeyword_1_1_2_1_13() { return cDKeyword_1_1_2_1_13; }

		//'e'
		public Keyword getEKeyword_1_1_2_1_14() { return cEKeyword_1_1_2_1_14; }

		//'f'
		public Keyword getFKeyword_1_1_2_1_15() { return cFKeyword_1_1_2_1_15; }
	}
	
	
	public class ClasspathEntryKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.ClasspathEntryKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSrcEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSrcSourceFolderKeyword_0_0 = (Keyword)cSrcEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutputEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutputOutputFolderKeyword_1_0 = (Keyword)cOutputEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLibEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLibLibraryJarKeyword_2_0 = (Keyword)cLibEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cConEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cConClassContainerKeyword_3_0 = (Keyword)cConEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ClasspathEntryKind:
		//	src='source-folder' | output='output-folder' | lib='library-jar' | con='class-container';
		public EnumRule getRule() { return rule; }

		//src='source-folder' | output='output-folder' | lib='library-jar' | con='class-container'
		public Alternatives getAlternatives() { return cAlternatives; }

		//src='source-folder'
		public EnumLiteralDeclaration getSrcEnumLiteralDeclaration_0() { return cSrcEnumLiteralDeclaration_0; }

		//'source-folder'
		public Keyword getSrcSourceFolderKeyword_0_0() { return cSrcSourceFolderKeyword_0_0; }

		//output='output-folder'
		public EnumLiteralDeclaration getOutputEnumLiteralDeclaration_1() { return cOutputEnumLiteralDeclaration_1; }

		//'output-folder'
		public Keyword getOutputOutputFolderKeyword_1_0() { return cOutputOutputFolderKeyword_1_0; }

		//lib='library-jar'
		public EnumLiteralDeclaration getLibEnumLiteralDeclaration_2() { return cLibEnumLiteralDeclaration_2; }

		//'library-jar'
		public Keyword getLibLibraryJarKeyword_2_0() { return cLibLibraryJarKeyword_2_0; }

		//con='class-container'
		public EnumLiteralDeclaration getConEnumLiteralDeclaration_3() { return cConEnumLiteralDeclaration_3; }

		//'class-container'
		public Keyword getConClassContainerKeyword_3_0() { return cConClassContainerKeyword_3_0; }
	}
	
	private final EmfsRootElements pEmfsRoot;
	private final EmfsNameElements pEmfsName;
	private final EmfsResourcesRefElements pEmfsResourcesRef;
	private final ResourceNameElements pResourceName;
	private final EmfsResourceElements pEmfsResource;
	private final PropertyElements pProperty;
	private final FolderNameElements pFolderName;
	private final EmfsContainerElements pEmfsContainer;
	private final GitContentProviderElements pGitContentProvider;
	private final FileNameElements pFileName;
	private final EmfsFileElements pEmfsFile;
	private final StringContentProviderElements pStringContentProvider;
	private final AbstractStringContentsElements pAbstractStringContents;
	private final TerminalRule tSTRING_CONTENT;
	private final VerbatimStringContentsElements pVerbatimStringContents;
	private final PropertyValueStringElements pPropertyValueString;
	private final WrappingStringContentProviderElements pWrappingStringContentProvider;
	private final PROPERTY_REFElements pPROPERTY_REF;
	private final URL_SCHEMEElements pURL_SCHEME;
	private final URL_HOST_NAMEElements pURL_HOST_NAME;
	private final URL_HOSTElements pURL_HOST;
	private final URL_PATHElements pURL_PATH;
	private final URLElements pURL;
	private final URLContentProviderElements pURLContentProvider;
	private final GitURLContentProviderElements pGitURLContentProvider;
	private final GitContentRefElements pGitContentRef;
	private final DotClasspathFileContentProviderElements pDotClasspathFileContentProvider;
	private final AbstractClasspathEntryElements pAbstractClasspathEntry;
	private final CLASSPATH_ENTRY_PATHElements pCLASSPATH_ENTRY_PATH;
	private final ClasspathEntryElements pClasspathEntry;
	private final ClasspathEntryKindElements eClasspathEntryKind;
	private final VERSIONElements pVERSION;
	private final DotProjectFileContentProviderElements pDotProjectFileContentProvider;
	private final XmlStringContentsElements pXmlStringContents;
	private final XmlElementElements pXmlElement;
	private final XmlPIElementElements pXmlPIElement;
	private final XmlTagElementElements pXmlTagElement;
	private final XmlTagNameElements pXmlTagName;
	private final XmlContentsElements pXmlContents;
	private final XmlTagElements pXmlTag;
	private final XmlAttributeElements pXmlAttribute;
	private final XmlIntElements pXmlInt;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tWS;
	private final TerminalRule tXML_TEXT;
	
	private final Grammar grammar;

	@Inject
	public XemfsGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pEmfsRoot = new EmfsRootElements();
		this.pEmfsName = new EmfsNameElements();
		this.pEmfsResourcesRef = new EmfsResourcesRefElements();
		this.pResourceName = new ResourceNameElements();
		this.pEmfsResource = new EmfsResourceElements();
		this.pProperty = new PropertyElements();
		this.pFolderName = new FolderNameElements();
		this.pEmfsContainer = new EmfsContainerElements();
		this.pGitContentProvider = new GitContentProviderElements();
		this.pFileName = new FileNameElements();
		this.pEmfsFile = new EmfsFileElements();
		this.pStringContentProvider = new StringContentProviderElements();
		this.pAbstractStringContents = new AbstractStringContentsElements();
		this.tSTRING_CONTENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.STRING_CONTENT");
		this.pVerbatimStringContents = new VerbatimStringContentsElements();
		this.pPropertyValueString = new PropertyValueStringElements();
		this.pWrappingStringContentProvider = new WrappingStringContentProviderElements();
		this.pPROPERTY_REF = new PROPERTY_REFElements();
		this.pURL_SCHEME = new URL_SCHEMEElements();
		this.pURL_HOST_NAME = new URL_HOST_NAMEElements();
		this.pURL_HOST = new URL_HOSTElements();
		this.pURL_PATH = new URL_PATHElements();
		this.pURL = new URLElements();
		this.pURLContentProvider = new URLContentProviderElements();
		this.pGitURLContentProvider = new GitURLContentProviderElements();
		this.pGitContentRef = new GitContentRefElements();
		this.pDotClasspathFileContentProvider = new DotClasspathFileContentProviderElements();
		this.pAbstractClasspathEntry = new AbstractClasspathEntryElements();
		this.pCLASSPATH_ENTRY_PATH = new CLASSPATH_ENTRY_PATHElements();
		this.pClasspathEntry = new ClasspathEntryElements();
		this.eClasspathEntryKind = new ClasspathEntryKindElements();
		this.pVERSION = new VERSIONElements();
		this.pDotProjectFileContentProvider = new DotProjectFileContentProviderElements();
		this.pXmlStringContents = new XmlStringContentsElements();
		this.pXmlElement = new XmlElementElements();
		this.pXmlPIElement = new XmlPIElementElements();
		this.pXmlTagElement = new XmlTagElementElements();
		this.pXmlTagName = new XmlTagNameElements();
		this.pXmlContents = new XmlContentsElements();
		this.pXmlTag = new XmlTagElements();
		this.pXmlAttribute = new XmlAttributeElements();
		this.pXmlInt = new XmlIntElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.STRING");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.WS");
		this.tXML_TEXT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "no.hal.emfs.xtext.Xemfs.XML_TEXT");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("no.hal.emfs.xtext.Xemfs".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//EmfsRoot EmfsContainer:
	//	{EmfsContainer} ('emfs' name=EmfsName?)? ('#' tags+=ID)* properties+=Property* ('extends'
	//	contentProvider=(GitContentProvider | EmfsResourcesRef) ';')?
	//	'/'
	//	resources+=EmfsResource*
	public EmfsRootElements getEmfsRootAccess() {
		return pEmfsRoot;
	}
	
	public ParserRule getEmfsRootRule() {
		return getEmfsRootAccess().getRule();
	}

	//EmfsName:
	//	ID ('.' ID)*;
	public EmfsNameElements getEmfsNameAccess() {
		return pEmfsName;
	}
	
	public ParserRule getEmfsNameRule() {
		return getEmfsNameAccess().getRule();
	}

	//EmfsResourcesRef:
	//	resources+=[EmfsResource|EmfsName] (',' resources+=[EmfsResource|EmfsName])*;
	public EmfsResourcesRefElements getEmfsResourcesRefAccess() {
		return pEmfsResourcesRef;
	}
	
	public ParserRule getEmfsResourcesRefRule() {
		return getEmfsResourcesRefAccess().getRule();
	}

	//ResourceName:
	//	'.'? ID ('.' ID)*;
	public ResourceNameElements getResourceNameAccess() {
		return pResourceName;
	}
	
	public ParserRule getResourceNameRule() {
		return getResourceNameAccess().getRule();
	}

	//EmfsResource:
	//	EmfsContainer | EmfsFile;
	public EmfsResourceElements getEmfsResourceAccess() {
		return pEmfsResource;
	}
	
	public ParserRule getEmfsResourceRule() {
		return getEmfsResourceAccess().getRule();
	}

	//Property:
	//	'$' name=EmfsName '=' value=(STRING | EmfsName);
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//FolderName:
	//	ResourceName '/';
	public FolderNameElements getFolderNameAccess() {
		return pFolderName;
	}
	
	public ParserRule getFolderNameRule() {
		return getFolderNameAccess().getRule();
	}

	//EmfsContainer:
	//	name=FolderName ('#' tags+=EmfsName)* properties+=Property* ('extends' contentProvider=(GitContentProvider |
	//	EmfsResourcesRef) ';')?
	//	resources+=EmfsResource*
	//	=> ';'?;
	public EmfsContainerElements getEmfsContainerAccess() {
		return pEmfsContainer;
	}
	
	public ParserRule getEmfsContainerRule() {
		return getEmfsContainerAccess().getRule();
	}

	//GitContentProvider:
	//	gitRef=GitContentRef;
	public GitContentProviderElements getGitContentProviderAccess() {
		return pGitContentProvider;
	}
	
	public ParserRule getGitContentProviderRule() {
		return getGitContentProviderAccess().getRule();
	}

	//FileName:
	//	ResourceName;
	public FileNameElements getFileNameAccess() {
		return pFileName;
	}
	
	public ParserRule getFileNameRule() {
		return getFileNameAccess().getRule();
	}

	//EmfsFile:
	//	name=FileName
	//	writeable?='*'? ('#' tags+=ID)* properties+=Property* ('@' contentProvider=(URLContentProvider |
	//	GitURLContentProvider) ';' | contentProvider=(StringContentProvider | WrappingStringContentProvider) | ':'
	//	contentProvider=(DotClasspathFileContentProvider | DotProjectFileContentProvider) | ';');
	public EmfsFileElements getEmfsFileAccess() {
		return pEmfsFile;
	}
	
	public ParserRule getEmfsFileRule() {
		return getEmfsFileAccess().getRule();
	}

	//StringContentProvider:
	//	stringContents+=AbstractStringContents+;
	public StringContentProviderElements getStringContentProviderAccess() {
		return pStringContentProvider;
	}
	
	public ParserRule getStringContentProviderRule() {
		return getStringContentProviderAccess().getRule();
	}

	//AbstractStringContents:
	//	PropertyValueString | VerbatimStringContents | XmlStringContents;
	public AbstractStringContentsElements getAbstractStringContentsAccess() {
		return pAbstractStringContents;
	}
	
	public ParserRule getAbstractStringContentsRule() {
		return getAbstractStringContentsAccess().getRule();
	}

	//terminal STRING_CONTENT:
	//	'8<---' '\r'? '\n'->'\n--->8';
	public TerminalRule getSTRING_CONTENTRule() {
		return tSTRING_CONTENT;
	} 

	//VerbatimStringContents:
	//	('---' writeable?='*'? ('#' tags+=ID)* properties+=Property*)?
	//	stringContent=(STRING | STRING_CONTENT);
	public VerbatimStringContentsElements getVerbatimStringContentsAccess() {
		return pVerbatimStringContents;
	}
	
	public ParserRule getVerbatimStringContentsRule() {
		return getVerbatimStringContentsAccess().getRule();
	}

	//PropertyValueString:
	//	'$' writeable?='*'? (propertyName=ID | '{' propertyName=EmfsName '}') (':' defaultValue=(STRING | EmfsName))?;
	public PropertyValueStringElements getPropertyValueStringAccess() {
		return pPropertyValueString;
	}
	
	public ParserRule getPropertyValueStringRule() {
		return getPropertyValueStringAccess().getRule();
	}

	//WrappingStringContentProvider:
	//	('[' prefix=AbstractStringContents ']') ('@' contentProvider=(URLContentProvider | GitURLContentProvider)) ('['
	//	suffix=AbstractStringContents ']');
	public WrappingStringContentProviderElements getWrappingStringContentProviderAccess() {
		return pWrappingStringContentProvider;
	}
	
	public ParserRule getWrappingStringContentProviderRule() {
		return getWrappingStringContentProviderAccess().getRule();
	}

	//PROPERTY_REF:
	//	'$' ('{' EmfsName '}' | ID);
	public PROPERTY_REFElements getPROPERTY_REFAccess() {
		return pPROPERTY_REF;
	}
	
	public ParserRule getPROPERTY_REFRule() {
		return getPROPERTY_REFAccess().getRule();
	}

	//URL_SCHEME:
	//	'http' | 'https' | 'ftp' | 'file';
	public URL_SCHEMEElements getURL_SCHEMEAccess() {
		return pURL_SCHEME;
	}
	
	public ParserRule getURL_SCHEMERule() {
		return getURL_SCHEMEAccess().getRule();
	}

	//URL_HOST_NAME:
	//	ID ('.' ID)+;
	public URL_HOST_NAMEElements getURL_HOST_NAMEAccess() {
		return pURL_HOST_NAME;
	}
	
	public ParserRule getURL_HOST_NAMERule() {
		return getURL_HOST_NAMEAccess().getRule();
	}

	//URL_HOST:
	//	'//' (URL_HOST_NAME (':' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+)? | PROPERTY_REF);
	public URL_HOSTElements getURL_HOSTAccess() {
		return pURL_HOST;
	}
	
	public ParserRule getURL_HOSTRule() {
		return getURL_HOSTAccess().getRule();
	}

	//URL_PATH:
	//	'/' (FolderName | PROPERTY_REF '/')* (FileName | PROPERTY_REF);
	public URL_PATHElements getURL_PATHAccess() {
		return pURL_PATH;
	}
	
	public ParserRule getURL_PATHRule() {
		return getURL_PATHAccess().getRule();
	}

	//URL:
	//	URL_SCHEME ':' URL_HOST? URL_PATH;
	public URLElements getURLAccess() {
		return pURL;
	}
	
	public ParserRule getURLRule() {
		return getURLAccess().getRule();
	}

	//URLContentProvider:
	//	urlString=(STRING | URL);
	public URLContentProviderElements getURLContentProviderAccess() {
		return pURLContentProvider;
	}
	
	public ParserRule getURLContentProviderRule() {
		return getURLContentProviderAccess().getRule();
	}

	//GitURLContentProvider:
	//	gitRef=GitContentRef;
	public GitURLContentProviderElements getGitURLContentProviderAccess() {
		return pGitURLContentProvider;
	}
	
	public ParserRule getGitURLContentProviderRule() {
		return getGitURLContentProviderAccess().getRule();
	}

	//// git@github.com:me/mytestrepo.git
	//GitContentRef:
	//	'git' '@' (host=(URL_HOST_NAME | PROPERTY_REF) (':' owner=(ID | PROPERTY_REF))? | owner=(ID | PROPERTY_REF)) '/'
	//	repo=ID path=URL_PATH?;
	public GitContentRefElements getGitContentRefAccess() {
		return pGitContentRef;
	}
	
	public ParserRule getGitContentRefRule() {
		return getGitContentRefAccess().getRule();
	}

	//DotClasspathFileContentProvider:
	//	'dot.classpath'
	//	entries+=AbstractClasspathEntry+
	//	';';
	public DotClasspathFileContentProviderElements getDotClasspathFileContentProviderAccess() {
		return pDotClasspathFileContentProvider;
	}
	
	public ParserRule getDotClasspathFileContentProviderRule() {
		return getDotClasspathFileContentProviderAccess().getRule();
	}

	//AbstractClasspathEntry:
	//	ClasspathEntry;
	public AbstractClasspathEntryElements getAbstractClasspathEntryAccess() {
		return pAbstractClasspathEntry;
	}
	
	public ParserRule getAbstractClasspathEntryRule() {
		return getAbstractClasspathEntryAccess().getRule();
	}

	//CLASSPATH_ENTRY_PATH:
	//	FolderName* FileName;
	public CLASSPATH_ENTRY_PATHElements getCLASSPATH_ENTRY_PATHAccess() {
		return pCLASSPATH_ENTRY_PATH;
	}
	
	public ParserRule getCLASSPATH_ENTRY_PATHRule() {
		return getCLASSPATH_ENTRY_PATHAccess().getRule();
	}

	//ClasspathEntry:
	//	explicitKind=ClasspathEntryKind absolute?='/'? explicitPath=CLASSPATH_ENTRY_PATH ('(' major=VERSION ('.'
	//	minor=VERSION)? ')')?;
	public ClasspathEntryElements getClasspathEntryAccess() {
		return pClasspathEntry;
	}
	
	public ParserRule getClasspathEntryRule() {
		return getClasspathEntryAccess().getRule();
	}

	//enum ClasspathEntryKind:
	//	src='source-folder' | output='output-folder' | lib='library-jar' | con='class-container';
	public ClasspathEntryKindElements getClasspathEntryKindAccess() {
		return eClasspathEntryKind;
	}
	
	public EnumRule getClasspathEntryKindRule() {
		return getClasspathEntryKindAccess().getRule();
	}

	//VERSION ecore::EInt:
	//	('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+
	public VERSIONElements getVERSIONAccess() {
		return pVERSION;
	}
	
	public ParserRule getVERSIONRule() {
		return getVERSIONAccess().getRule();
	}

	//DotProjectFileContentProvider:
	//	'dot.project' ('#' keys+=(STRING | FileName))+ ('@' linkedResources+=[EmfsResource|EmfsName] (','
	//	linkedResources+=[EmfsResource|EmfsName])*)*
	//	';';
	public DotProjectFileContentProviderElements getDotProjectFileContentProviderAccess() {
		return pDotProjectFileContentProvider;
	}
	
	public ParserRule getDotProjectFileContentProviderRule() {
		return getDotProjectFileContentProviderAccess().getRule();
	}

	//// XML grammar
	//XmlStringContents:
	//	'<<' element=XmlElement '>>';
	public XmlStringContentsElements getXmlStringContentsAccess() {
		return pXmlStringContents;
	}
	
	public ParserRule getXmlStringContentsRule() {
		return getXmlStringContentsAccess().getRule();
	}

	//XmlElement:
	//	XmlPIElement | XmlTagElement;
	public XmlElementElements getXmlElementAccess() {
		return pXmlElement;
	}
	
	public ParserRule getXmlElementRule() {
		return getXmlElementAccess().getRule();
	}

	//XmlPIElement:
	//	'?' name=ID attributes+=XmlAttribute* '?';
	public XmlPIElementElements getXmlPIElementAccess() {
		return pXmlPIElement;
	}
	
	public ParserRule getXmlPIElementRule() {
		return getXmlPIElementAccess().getRule();
	}

	//XmlTagElement:
	//	startTag=XmlTag ('/' | pre=XML_TEXT contents+=XmlContents* ('/' endTag=XmlTagName?));
	public XmlTagElementElements getXmlTagElementAccess() {
		return pXmlTagElement;
	}
	
	public ParserRule getXmlTagElementRule() {
		return getXmlTagElementAccess().getRule();
	}

	//XmlTagName:
	//	ID (':' ID)?;
	public XmlTagNameElements getXmlTagNameAccess() {
		return pXmlTagName;
	}
	
	public ParserRule getXmlTagNameRule() {
		return getXmlTagNameAccess().getRule();
	}

	//XmlContents:
	//	element=XmlElement
	//	post=XML_TEXT;
	public XmlContentsElements getXmlContentsAccess() {
		return pXmlContents;
	}
	
	public ParserRule getXmlContentsRule() {
		return getXmlContentsAccess().getRule();
	}

	//XmlTag:
	//	name=XmlTagName attributes+=XmlAttribute*;
	public XmlTagElements getXmlTagAccess() {
		return pXmlTag;
	}
	
	public ParserRule getXmlTagRule() {
		return getXmlTagAccess().getRule();
	}

	//XmlAttribute:
	//	name=ID ('=' value=(STRING | XmlInt))?;
	public XmlAttributeElements getXmlAttributeAccess() {
		return pXmlAttribute;
	}
	
	public ParserRule getXmlAttributeRule() {
		return getXmlAttributeAccess().getRule();
	}

	//XmlInt:
	//	('1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9') ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')* |
	//	'0' ('b' ('0' | '1')+ | 'o' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7')+ | 'x' ('0' | '1' | '2' | '3' | '4' | '5'
	//	| '6' | '7' | '8' | '9' | 'a' | 'b' | 'c' | 'd' | 'e' | 'f')+);
	public XmlIntElements getXmlIntAccess() {
		return pXmlInt;
	}
	
	public ParserRule getXmlIntRule() {
		return getXmlIntAccess().getRule();
	}

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_' | '-' | '0'..'9')+;
	public TerminalRule getIDRule() {
		return tID;
	} 

	//terminal STRING:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | '"'))* '"' |
	//	"'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	} 

	//terminal XML_TEXT:
	//	'>' ('<' | !('<' | '>') !'<'* '<');
	public TerminalRule getXML_TEXTRule() {
		return tXML_TEXT;
	} 
}
